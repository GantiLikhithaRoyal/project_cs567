Last login: Sat Dec  7 15:59:59 on ttys006
likhitharoyal@Likhithas-MBP project_cs567 % docker build -t banking-system .

[+] Building 6.2s (10/10) FINISHED                         docker:desktop-linux
 => [internal] load build definition from Dockerfile                       0.0s
 => => transferring dockerfile: 794B                                       0.0s
 => [internal] load metadata for docker.io/library/python:3.9-slim         0.8s
 => [auth] library/python:pull token for registry-1.docker.io              0.0s
 => [internal] load .dockerignore                                          0.0s
 => => transferring context: 2B                                            0.0s
 => [1/4] FROM docker.io/library/python:3.9-slim@sha256:4ee0613170ac55ebc  0.0s
 => => resolve docker.io/library/python:3.9-slim@sha256:4ee0613170ac55ebc  0.0s
 => [internal] load build context                                          0.0s
 => => transferring context: 8.46kB                                        0.0s
 => CACHED [2/4] WORKDIR /app                                              0.0s
 => [3/4] COPY . /app                                                      0.0s
 => [4/4] RUN pip install -r requirements.txt                              4.6s
 => exporting to image                                                     0.6s 
 => => exporting layers                                                    0.5s 
 => => exporting manifest sha256:aab3805c129507a57e232e3351cd46fbbc79b70e  0.0s 
 => => exporting config sha256:8c31d0a52575627af11a03a975ad74399a43695685  0.0s 
 => => exporting attestation manifest sha256:c89091d1523286d5f4b4827bf148  0.0s 
 => => exporting manifest list sha256:07d24c0ece7944bbaef684b014efb475908  0.0s 
 => => naming to docker.io/library/banking-system:latest                   0.0s
 => => unpacking to docker.io/library/banking-system:latest                0.1s
likhitharoyal@Likhithas-MBP project_cs567 % docker run --rm banking-system

.F.FF
======================================================================
FAIL: test_create_account (test_banking_system.TestBankingSystem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/app/test_banking_system.py", line 15, in test_create_account
    self.assertIsNone(self.bank.get_account('12345'))
AssertionError: <banking_system.BankAccount object at 0xffffa49113a0> is not None

======================================================================
FAIL: test_transfer (test_banking_system.TestBankingSystem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/app/test_banking_system.py", line 37, in test_transfer
    self.assertEqual(source_account.get_balance(), 20)
AssertionError: 0 != 20

======================================================================
FAIL: test_withdraw (test_banking_system.TestBankingSystem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/app/test_banking_system.py", line 28, in test_withdraw
    self.assertEqual(account.get_balance(), 50)
AssertionError: 0 != 50

----------------------------------------------------------------------
Ran 5 tests in 0.000s

FAILED (failures=3)
Account created successfully.
Account created successfully.
Account closed successfully.
Account not found.
Account created successfully.
Account created successfully.
Account created successfully.
Account already exists.
Account created successfully.
Account created successfully.
Invalid deposit amount.
Account created successfully.
Account created successfully.
Invalid transfer amount or insufficient funds.
Account created successfully.
Account created successfully.
Invalid withdrawal amount or insufficient funds.
likhitharoyal@Likhithas-MBP project_cs567 % docker run --rm banking-system

.F.FF
======================================================================
FAIL: test_create_account (test_banking_system.TestBankingSystem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/app/test_banking_system.py", line 15, in test_create_account
    self.assertIsNone(self.bank.get_account('12345'))
AssertionError: <banking_system.BankAccount object at 0xffffa3a603a0> is not None

======================================================================
FAIL: test_transfer (test_banking_system.TestBankingSystem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/app/test_banking_system.py", line 37, in test_transfer
    self.assertEqual(source_account.get_balance(), 20)
AssertionError: 0 != 20

======================================================================
FAIL: test_withdraw (test_banking_system.TestBankingSystem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/app/test_banking_system.py", line 28, in test_withdraw
    self.assertEqual(account.get_balance(), 50)
AssertionError: 0 != 50

----------------------------------------------------------------------
Ran 5 tests in 0.000s

FAILED (failures=3)
Account created successfully.
Account created successfully.
Account closed successfully.
Account not found.
Account created successfully.
Account created successfully.
Account created successfully.
Account already exists.
Account created successfully.
Account created successfully.
Invalid deposit amount.
Account created successfully.
Account created successfully.
Invalid transfer amount or insufficient funds.
Account created successfully.
Account created successfully.
Invalid withdrawal amount or insufficient funds.
likhitharoyal@Likhithas-MBP project_cs567 % docker run --rm banking-system coverage report -m

Couldn't use data file '/app/.coverage': Looks like a coverage 4.x data file. Are you mixing versions of coverage?
likhitharoyal@Likhithas-MBP project_cs567 % docker run --rm banking-system coverage report -m
Couldn't use data file '/app/.coverage': Looks like a coverage 4.x data file. Are you mixing versions of coverage?
likhitharoyal@Likhithas-MBP project_cs567 % docker run --rm banking-system mutmut results

docker: Error response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: exec: "mutmut": executable file not found in $PATH: unknown.
likhitharoyal@Likhithas-MBP project_cs567 % docker run --rm banking-system mutmut results
docker: Error response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: exec: "mutmut": executable file not found in $PATH: unknown.
likhitharoyal@Likhithas-MBP project_cs567 % python -m unittest discover

zsh: command not found: python
likhitharoyal@Likhithas-MBP project_cs567 % python3 -m unittest discover

Account created successfully.
Account created successfully.
Account closed successfully.
Account not found.
.Account created successfully.
Account created successfully.
Account created successfully.
Account already exists.
FAccount created successfully.
Account created successfully.
Invalid deposit amount.
.Account created successfully.
Account created successfully.
Invalid transfer amount or insufficient funds.
FAccount created successfully.
Account created successfully.
Invalid withdrawal amount or insufficient funds.
F
======================================================================
FAIL: test_create_account (test_banking_system.TestBankingSystem.test_create_account)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 15, in test_create_account
    self.assertIsNone(self.bank.get_account('12345'))
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <banking_system.BankAccount object at 0x10064c2d0> is not None

======================================================================
FAIL: test_transfer (test_banking_system.TestBankingSystem.test_transfer)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 37, in test_transfer
    self.assertEqual(source_account.get_balance(), 20)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 20

======================================================================
FAIL: test_withdraw (test_banking_system.TestBankingSystem.test_withdraw)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 28, in test_withdraw
    self.assertEqual(account.get_balance(), 50)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 50

----------------------------------------------------------------------
Ran 5 tests in 0.001s

FAILED (failures=3)
likhitharoyal@Likhithas-MBP project_cs567 % coverage run -m unittest discover
coverage report -m

Account created successfully.
Account created successfully.
Account closed successfully.
Account not found.
.Account created successfully.
Account created successfully.
Account created successfully.
Account already exists.
FAccount created successfully.
Account created successfully.
Invalid deposit amount.
.Account created successfully.
Account created successfully.
Invalid transfer amount or insufficient funds.
FAccount created successfully.
Account created successfully.
Invalid withdrawal amount or insufficient funds.
F
======================================================================
FAIL: test_create_account (test_banking_system.TestBankingSystem.test_create_account)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 15, in test_create_account
    self.assertIsNone(self.bank.get_account('12345'))
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <banking_system.BankAccount object at 0x1037c2990> is not None

======================================================================
FAIL: test_transfer (test_banking_system.TestBankingSystem.test_transfer)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 37, in test_transfer
    self.assertEqual(source_account.get_balance(), 20)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 20

======================================================================
FAIL: test_withdraw (test_banking_system.TestBankingSystem.test_withdraw)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 28, in test_withdraw
    self.assertEqual(account.get_balance(), 50)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 50

----------------------------------------------------------------------
Ran 5 tests in 0.002s

FAILED (failures=3)
Name                     Stmts   Miss  Cover   Missing
------------------------------------------------------
banking_system.py          106     68    36%   18-19, 25-27, 35, 38, 62-128, 131
test_banking_system.py      41      8    80%   30-31, 38-42, 52
------------------------------------------------------
TOTAL                      147     76    48%
likhitharoyal@Likhithas-MBP project_cs567 % coverage html

likhitharoyal@Likhithas-MBP project_cs567 % pip3 install mutmut

Requirement already satisfied: mutmut in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (3.2.2)
Requirement already satisfied: parso in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from mutmut) (0.8.4)
Requirement already satisfied: click in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from mutmut) (8.1.7)
Requirement already satisfied: junit-xml==1.8 in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from mutmut) (1.8)
Requirement already satisfied: setproctitle in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from mutmut) (1.3.4)
Requirement already satisfied: textual in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from mutmut) (0.89.1)
Requirement already satisfied: six in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from junit-xml==1.8->mutmut) (1.17.0)
Requirement already satisfied: markdown-it-py>=2.1.0 in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from markdown-it-py[linkify,plugins]>=2.1.0->textual->mutmut) (3.0.0)
Requirement already satisfied: platformdirs<5,>=3.6.0 in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from textual->mutmut) (4.3.6)
Requirement already satisfied: rich>=13.3.3 in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from textual->mutmut) (13.9.4)
Requirement already satisfied: typing-extensions<5.0.0,>=4.4.0 in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from textual->mutmut) (4.12.2)
Requirement already satisfied: mdurl~=0.1 in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from markdown-it-py>=2.1.0->markdown-it-py[linkify,plugins]>=2.1.0->textual->mutmut) (0.1.2)
Requirement already satisfied: linkify-it-py<3,>=1 in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from markdown-it-py[linkify,plugins]>=2.1.0->textual->mutmut) (2.0.3)
Requirement already satisfied: mdit-py-plugins in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from markdown-it-py[linkify,plugins]>=2.1.0->textual->mutmut) (0.4.2)
Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from rich>=13.3.3->textual->mutmut) (2.18.0)
Requirement already satisfied: uc-micro-py in /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages (from linkify-it-py<3,>=1->markdown-it-py[linkify,plugins]>=2.1.0->textual->mutmut) (1.0.3)
likhitharoyal@Likhithas-MBP project_cs567 % mutmut run

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/mutmut", line 8, in <module>
    sys.exit(cli())
             ~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1078, in main
    rv = self.invoke(ctx)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1688, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1211, in run
    read_config()
    ~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1024, in read_config
    ] or guess_paths_to_mutate()
         ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 132, in guess_paths_to_mutate
    raise FileNotFoundError(
        'Could not figure out where the code to mutate is. '
        'Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.')
FileNotFoundError: Could not figure out where the code to mutate is. Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.
likhitharoyal@Likhithas-MBP project_cs567 % mutmut banking_system.py
Usage: mutmut [OPTIONS] COMMAND [ARGS]...
Try 'mutmut --help' for help.

Error: No such command 'banking_system.py'.
likhitharoyal@Likhithas-MBP project_cs567 % mutmut run  banking_system.py
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/mutmut", line 8, in <module>
    sys.exit(cli())
             ~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1078, in main
    rv = self.invoke(ctx)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1688, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1211, in run
    read_config()
    ~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1024, in read_config
    ] or guess_paths_to_mutate()
         ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 132, in guess_paths_to_mutate
    raise FileNotFoundError(
        'Could not figure out where the code to mutate is. '
        'Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.')
FileNotFoundError: Could not figure out where the code to mutate is. Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.
likhitharoyal@Likhithas-MBP project_cs567 % mutmut results

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/mutmut", line 8, in <module>
    sys.exit(cli())
             ~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1078, in main
    rv = self.invoke(ctx)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1688, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1388, in results
    read_config()
    ~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1024, in read_config
    ] or guess_paths_to_mutate()
         ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 132, in guess_paths_to_mutate
    raise FileNotFoundError(
        'Could not figure out where the code to mutate is. '
        'Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.')
FileNotFoundError: Could not figure out where the code to mutate is. Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.
likhitharoyal@Likhithas-MBP project_cs567 % docker run --rm banking-system coverage run -m unittest discover
docker run --rm banking-system coverage report -m

.F.FF
======================================================================
FAIL: test_create_account (test_banking_system.TestBankingSystem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/app/test_banking_system.py", line 15, in test_create_account
    self.assertIsNone(self.bank.get_account('12345'))
AssertionError: <banking_system.BankAccount object at 0xffffafd113a0> is not None

======================================================================
FAIL: test_transfer (test_banking_system.TestBankingSystem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/app/test_banking_system.py", line 37, in test_transfer
    self.assertEqual(source_account.get_balance(), 20)
AssertionError: 0 != 20

======================================================================
FAIL: test_withdraw (test_banking_system.TestBankingSystem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/app/test_banking_system.py", line 28, in test_withdraw
    self.assertEqual(account.get_balance(), 50)
AssertionError: 0 != 50

----------------------------------------------------------------------
Ran 5 tests in 0.000s

FAILED (failures=3)
Account created successfully.
Account created successfully.
Account closed successfully.
Account not found.
Account created successfully.
Account created successfully.
Account created successfully.
Account already exists.
Account created successfully.
Account created successfully.
Invalid deposit amount.
Account created successfully.
Account created successfully.
Invalid transfer amount or insufficient funds.
Account created successfully.
Account created successfully.
Invalid withdrawal amount or insufficient funds.
Couldn't use data file '/app/.coverage': Looks like a coverage 4.x data file. Are you mixing versions of coverage?
likhitharoyal@Likhithas-MBP project_cs567 % docker run --rm banking-system mutmut run
docker run --rm banking-system mutmut results

docker: Error response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: exec: "mutmut": executable file not found in $PATH: unknown.
docker: Error response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: exec: "mutmut": executable file not found in $PATH: unknown.
likhitharoyal@Likhithas-MBP project_cs567 % python3 -m unittest discover

Account created successfully.
Account created successfully.
Account closed successfully.
Account not found.
.Account created successfully.
Account created successfully.
Account created successfully.
Account already exists.
FAccount created successfully.
Account created successfully.
Invalid deposit amount.
.Account created successfully.
Account created successfully.
Invalid transfer amount or insufficient funds.
FAccount created successfully.
Account created successfully.
Invalid withdrawal amount or insufficient funds.
F
======================================================================
FAIL: test_create_account (test_banking_system.TestBankingSystem.test_create_account)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 15, in test_create_account
    self.assertIsNone(self.bank.get_account('12345'))
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <banking_system.BankAccount object at 0x102bc02d0> is not None

======================================================================
FAIL: test_transfer (test_banking_system.TestBankingSystem.test_transfer)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 37, in test_transfer
    self.assertEqual(source_account.get_balance(), 20)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 20

======================================================================
FAIL: test_withdraw (test_banking_system.TestBankingSystem.test_withdraw)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 28, in test_withdraw
    self.assertEqual(account.get_balance(), 50)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 50

----------------------------------------------------------------------
Ran 5 tests in 0.001s

FAILED (failures=3)
likhitharoyal@Likhithas-MBP project_cs567 % coverage run -m unittest discover
coverage report -m

Account created successfully.
Account created successfully.
Account closed successfully.
Account not found.
.Account created successfully.
Account created successfully.
Account created successfully.
Account already exists.
FAccount created successfully.
Account created successfully.
Invalid deposit amount.
.Account created successfully.
Account created successfully.
Invalid transfer amount or insufficient funds.
FAccount created successfully.
Account created successfully.
Invalid withdrawal amount or insufficient funds.
F
======================================================================
FAIL: test_create_account (test_banking_system.TestBankingSystem.test_create_account)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 15, in test_create_account
    self.assertIsNone(self.bank.get_account('12345'))
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <banking_system.BankAccount object at 0x102c1e990> is not None

======================================================================
FAIL: test_transfer (test_banking_system.TestBankingSystem.test_transfer)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 37, in test_transfer
    self.assertEqual(source_account.get_balance(), 20)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 20

======================================================================
FAIL: test_withdraw (test_banking_system.TestBankingSystem.test_withdraw)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/likhitharoyal/Desktop/project_cs567/test_banking_system.py", line 28, in test_withdraw
    self.assertEqual(account.get_balance(), 50)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 50

----------------------------------------------------------------------
Ran 5 tests in 0.002s

FAILED (failures=3)
Name                     Stmts   Miss  Cover   Missing
------------------------------------------------------
banking_system.py          106     68    36%   18-19, 25-27, 35, 38, 62-128, 131
test_banking_system.py      41      8    80%   30-31, 38-42, 52
------------------------------------------------------
TOTAL                      147     76    48%
likhitharoyal@Likhithas-MBP project_cs567 % coverage html
open htmlcov/index.html

likhitharoyal@Likhithas-MBP project_cs567 % mutmut run
mutmut results

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/mutmut", line 8, in <module>
    sys.exit(cli())
             ~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1078, in main
    rv = self.invoke(ctx)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1688, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1211, in run
    read_config()
    ~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1024, in read_config
    ] or guess_paths_to_mutate()
         ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 132, in guess_paths_to_mutate
    raise FileNotFoundError(
        'Could not figure out where the code to mutate is. '
        'Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.')
FileNotFoundError: Could not figure out where the code to mutate is. Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/mutmut", line 8, in <module>
    sys.exit(cli())
             ~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1078, in main
    rv = self.invoke(ctx)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1688, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1388, in results
    read_config()
    ~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 1024, in read_config
    ] or guess_paths_to_mutate()
         ~~~~~~~~~~~~~~~~~~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/mutmut/__main__.py", line 132, in guess_paths_to_mutate
    raise FileNotFoundError(
        'Could not figure out where the code to mutate is. '
        'Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.')
FileNotFoundError: Could not figure out where the code to mutate is. Please specify it by adding "paths_to_mutate=code_dir" in setup.cfg to the [mutmut] section.
likhitharoyal@Likhithas-MBP project_cs567 % docker run -it banking_system mutate banking_system.py
*** UNIVERSALMUTATOR ***
MUTATING WITH RULES: universal.rules, python.rules
SKIPPED 154 MUTANTS ONLY CHANGING STRING LITERALS
745 MUTANTS GENERATED BY RULES
PROCESSING MUTANT: 2: class BankAccount:  ==>  class BankAccount:
break;...INVALID 
PROCESSING MUTANT: 2: class BankAccount:  ==>  class BankAccount:
continue;...INVALID 
PROCESSING MUTANT: 2: class BankAccount:  ==>  pass...INVALID 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=1):...VALID [written to ./banking_system.mutant.0.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=-1):...VALID [written to ./banking_system.mutant.1.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=(0+1)):...REDUNDANT 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=(0-1)):...REDUNDANT 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=0):
    break;...INVALID 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=0):
    continue;...INVALID 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__ ( account_number,self, owner, balance=0):...VALID [written to ./banking_system.mutant.2.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self , owner, account_number, balance=0):...VALID [written to ./banking_system.mutant.3.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      pass...INVALID 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, balance=0):...VALID [written to ./banking_system.mutant.4.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, balance=0):...VALID [written to ./banking_system.mutant.5.py] 
PROCESSING MUTANT: 4:         self.account_number = account_number  ==>          self.account_number = account_number
        break;...INVALID 
PROCESSING MUTANT: 4:         self.account_number = account_number  ==>          self.account_number = account_number
        continue;...INVALID 
PROCESSING MUTANT: 4:         self.account_number = account_number  ==>          pass...VALID [written to ./banking_system.mutant.6.py] 
PROCESSING MUTANT: 5:         self.owner = owner  ==>          self.owner = owner
        break;...INVALID 
PROCESSING MUTANT: 5:         self.owner = owner  ==>          self.owner = owner
        continue;...INVALID 
PROCESSING MUTANT: 5:         self.owner = owner  ==>          pass...VALID [written to ./banking_system.mutant.7.py] 
PROCESSING MUTANT: 6:         self.balance = balance  ==>          self.balance = balance
        break;...INVALID 
PROCESSING MUTANT: 6:         self.balance = balance  ==>          self.balance = balance
        continue;...INVALID 
PROCESSING MUTANT: 6:         self.balance = balance  ==>          pass...VALID [written to ./banking_system.mutant.8.py] 
PROCESSING MUTANT: 7:         self.transaction_history = []  ==>          self.transaction_history = []
        break;...INVALID 
PROCESSING MUTANT: 7:         self.transaction_history = []  ==>          self.transaction_history = []
        continue;...INVALID 
PROCESSING MUTANT: 7:         self.transaction_history = []  ==>          pass...VALID [written to ./banking_system.mutant.9.py] 
PROCESSING MUTANT: 9:     def deposit(self, amount):  ==>      def deposit(self, amount):
    break;...INVALID 
PROCESSING MUTANT: 9:     def deposit(self, amount):  ==>      def deposit(self, amount):
    continue;...INVALID 
PROCESSING MUTANT: 9:     def deposit(self, amount):  ==>      def deposit ( amount,self):...VALID [written to ./banking_system.mutant.10.py] 
PROCESSING MUTANT: 9:     def deposit(self, amount):  ==>      pass...INVALID 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount < 0:...VALID [written to ./banking_system.mutant.11.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount == 0:...VALID [written to ./banking_system.mutant.12.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount >= 0:...VALID [written to ./banking_system.mutant.13.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount <= 0:...VALID [written to ./banking_system.mutant.14.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount != 0:...VALID [written to ./banking_system.mutant.15.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > 1:...VALID [written to ./banking_system.mutant.16.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > -1:...VALID [written to ./banking_system.mutant.17.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > (0+1):...REDUNDANT 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > (0-1):...REDUNDANT 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > 0:
        break;...INVALID 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > 0:
        continue;...INVALID 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if not (amount > 0):...VALID [written to ./banking_system.mutant.18.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          pass...INVALID 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance -= amount...VALID [written to ./banking_system.mutant.19.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance *= amount...VALID [written to ./banking_system.mutant.20.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance /= amount...VALID [written to ./banking_system.mutant.21.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance %= amount...VALID [written to ./banking_system.mutant.22.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance =+ amount...VALID [written to ./banking_system.mutant.23.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance += amount
            break;...INVALID 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance += amount
            continue;...INVALID 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              pass...VALID [written to ./banking_system.mutant.24.py] 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              self.transaction_history.append(f"Deposit: +${amount:.2f}")
            break;...INVALID 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              self.transaction_history.append(f"Deposit: +${amount:.2f}")
            continue;...INVALID 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              self.transaction_history.append(f"")...VALID [written to ./banking_system.mutant.25.py] 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              self.transaction_history.appbegin(f"Deposit: +${amount:.2f}")...REDUNDANT 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              pass...VALID [written to ./banking_system.mutant.26.py] 
PROCESSING MUTANT: 13:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 13:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 13:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 14:             print("Invalid deposit amount.")  ==>              print("Invalid deposit amount.")
            break;...INVALID 
PROCESSING MUTANT: 14:             print("Invalid deposit amount.")  ==>              print("Invalid deposit amount.")
            continue;...INVALID 
PROCESSING MUTANT: 14:             print("Invalid deposit amount.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 14:             print("Invalid deposit amount.")  ==>              pass...VALID [written to ./banking_system.mutant.27.py] 
PROCESSING MUTANT: 16:     def withdraw(self, amount):  ==>      def withdraw(self, amount):
    break;...INVALID 
PROCESSING MUTANT: 16:     def withdraw(self, amount):  ==>      def withdraw(self, amount):
    continue;...INVALID 
PROCESSING MUTANT: 16:     def withdraw(self, amount):  ==>      def withdraw ( amount,self):...VALID [written to ./banking_system.mutant.28.py] 
PROCESSING MUTANT: 16:     def withdraw(self, amount):  ==>      pass...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount == self.balance:...VALID [written to ./banking_system.mutant.29.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount != self.balance:...VALID [written to ./banking_system.mutant.30.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount < self.balance:...VALID [written to ./banking_system.mutant.31.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount > self.balance:...VALID [written to ./banking_system.mutant.32.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount >= self.balance:...VALID [written to ./banking_system.mutant.33.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount === self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <== self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount >== self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount !== self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount < 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.34.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount == 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.35.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount >= 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.36.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount <= 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.37.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount != 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.38.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 1 and amount <= self.balance:...VALID [written to ./banking_system.mutant.39.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > -1 and amount <= self.balance:...VALID [written to ./banking_system.mutant.40.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > (0+1) and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > (0-1) and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <= self.balance:
        break;...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <= self.balance:
        continue;...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if not (amount > 0 and amount <= self.balance):...VALID [written to ./banking_system.mutant.41.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0  or amount <= self.balance:...VALID [written to ./banking_system.mutant.42.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and True...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>  True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>   True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>    True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>     True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>      True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>       True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>        True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>         True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          iTrue and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          ifTrue and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if True and amount <= self.balance:...VALID [written to ./banking_system.mutant.43.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if aTrue and amount <= self.balance:...VALID [written to ./banking_system.mutant.44.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amoTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amouTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amounTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amountTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount >True and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > True and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          pass...INVALID 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance += amount...VALID [written to ./banking_system.mutant.45.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance *= amount...VALID [written to ./banking_system.mutant.46.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance /= amount...VALID [written to ./banking_system.mutant.47.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance %= amount...VALID [written to ./banking_system.mutant.48.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance =- amount...VALID [written to ./banking_system.mutant.49.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance = amount...VALID [written to ./banking_system.mutant.50.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance -= amount
            break;...INVALID 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance -= amount
            continue;...INVALID 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              pass...VALID [written to ./banking_system.mutant.51.py] 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              self.transaction_history.append(f"Withdrawal: -${amount:.2f}")
            break;...INVALID 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              self.transaction_history.append(f"Withdrawal: -${amount:.2f}")
            continue;...INVALID 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              self.transaction_history.append(f"")...VALID [written to ./banking_system.mutant.52.py] 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              self.transaction_history.appbegin(f"Withdrawal: -${amount:.2f}")...REDUNDANT 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              pass...VALID [written to ./banking_system.mutant.53.py] 
PROCESSING MUTANT: 20:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 20:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 20:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print("Invalid withdrawal amount or insufficient funds.")
            break;...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print("Invalid withdrawal amount or insufficient funds.")
            continue;...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print("Invalid withdrawal amount or False...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>  False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>   False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>    False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>     False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>      False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>       False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>        False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>         False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>          False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>           False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>            False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>             False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              pFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              prFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              priFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              prinFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              printFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print(False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              pass...VALID [written to ./banking_system.mutant.54.py] 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer(self, amount, recipient_account):
    break;...INVALID 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer(self, amount, recipient_account):
    continue;...INVALID 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer ( amount,self, recipient_account):...VALID [written to ./banking_system.mutant.55.py] 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer(self , recipient_account, amount):...VALID [written to ./banking_system.mutant.56.py] 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      pass...INVALID 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer(self, recipient_account):...VALID [written to ./banking_system.mutant.57.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount == self.balance:...VALID [written to ./banking_system.mutant.58.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount != self.balance:...VALID [written to ./banking_system.mutant.59.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount < self.balance:...VALID [written to ./banking_system.mutant.60.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount > self.balance:...VALID [written to ./banking_system.mutant.61.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount >= self.balance:...VALID [written to ./banking_system.mutant.62.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount === self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <== self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount >== self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount !== self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount < 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.63.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount == 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.64.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount >= 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.65.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount <= 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.66.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount != 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.67.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 1 and amount <= self.balance:...VALID [written to ./banking_system.mutant.68.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > -1 and amount <= self.balance:...VALID [written to ./banking_system.mutant.69.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > (0+1) and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > (0-1) and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <= self.balance:
        break;...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <= self.balance:
        continue;...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if not (amount > 0 and amount <= self.balance):...VALID [written to ./banking_system.mutant.70.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0  or amount <= self.balance:...VALID [written to ./banking_system.mutant.71.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and True...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>  True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>   True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>    True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>     True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>      True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>       True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>        True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>         True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          iTrue and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          ifTrue and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if True and amount <= self.balance:...VALID [written to ./banking_system.mutant.72.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if aTrue and amount <= self.balance:...VALID [written to ./banking_system.mutant.73.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amoTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amouTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amounTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amountTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount >True and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > True and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          pass...INVALID 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance += amount...VALID [written to ./banking_system.mutant.74.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance *= amount...VALID [written to ./banking_system.mutant.75.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance /= amount...VALID [written to ./banking_system.mutant.76.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance %= amount...VALID [written to ./banking_system.mutant.77.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance =- amount...VALID [written to ./banking_system.mutant.78.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance = amount...VALID [written to ./banking_system.mutant.79.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance -= amount
            break;...INVALID 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance -= amount
            continue;...INVALID 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              pass...VALID [written to ./banking_system.mutant.80.py] 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")
            break;...INVALID 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")
            continue;...INVALID 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              self.transaction_history.append(f"")...VALID [written to ./banking_system.mutant.81.py] 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              self.transaction_history.appbegin(f"Transfer to {recipient_account.owner}: -${amount:.2f}")...REDUNDANT 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              pass...VALID [written to ./banking_system.mutant.82.py] 
PROCESSING MUTANT: 27:             recipient_account.deposit(amount)  ==>              recipient_account.deposit(amount)
            break;...INVALID 
PROCESSING MUTANT: 27:             recipient_account.deposit(amount)  ==>              recipient_account.deposit(amount)
            continue;...INVALID 
PROCESSING MUTANT: 27:             recipient_account.deposit(amount)  ==>              pass...VALID [written to ./banking_system.mutant.83.py] 
PROCESSING MUTANT: 28:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 28:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 28:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print("Invalid transfer amount or insufficient funds.")
            break;...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print("Invalid transfer amount or insufficient funds.")
            continue;...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print("Invalid transfer amount or False...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>  False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>   False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>    False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>     False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>      False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>       False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>        False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>         False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>          False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>           False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>            False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>             False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              pFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              prFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              priFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              prinFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              printFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print(False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              pass...VALID [written to ./banking_system.mutant.84.py] 
PROCESSING MUTANT: 31:     def get_balance(self):  ==>      def get_balance(self):
    break;...INVALID 
PROCESSING MUTANT: 31:     def get_balance(self):  ==>      def get_balance(self):
    continue;...INVALID 
PROCESSING MUTANT: 31:     def get_balance(self):  ==>      pass...INVALID 
PROCESSING MUTANT: 32:         return self.balance  ==>          return self.balance
        break;...INVALID 
PROCESSING MUTANT: 32:         return self.balance  ==>          return self.balance
        continue;...INVALID 
PROCESSING MUTANT: 32:         return self.balance  ==>          return None...VALID [written to ./banking_system.mutant.85.py] 
PROCESSING MUTANT: 32:         return self.balance  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 34:     def get_transaction_history(self):  ==>      def get_transaction_history(self):
    break;...INVALID 
PROCESSING MUTANT: 34:     def get_transaction_history(self):  ==>      def get_transaction_history(self):
    continue;...INVALID 
PROCESSING MUTANT: 34:     def get_transaction_history(self):  ==>      pass...INVALID 
PROCESSING MUTANT: 35:         return self.transaction_history  ==>          return self.transaction_history
        break;...INVALID 
PROCESSING MUTANT: 35:         return self.transaction_history  ==>          return self.transaction_history
        continue;...INVALID 
PROCESSING MUTANT: 35:         return self.transaction_history  ==>          return None...VALID [written to ./banking_system.mutant.86.py] 
PROCESSING MUTANT: 35:         return self.transaction_history  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 37:     def __str__(self):  ==>      def __str__(self):
    break;...INVALID 
PROCESSING MUTANT: 37:     def __str__(self):  ==>      def __str__(self):
    continue;...INVALID 
PROCESSING MUTANT: 37:     def __str__(self):  ==>      pass...INVALID 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"
        break;...INVALID 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"
        continue;...INVALID 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          return f""...VALID [written to ./banking_system.mutant.87.py] 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          return None...VALID [written to ./banking_system.mutant.88.py] 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 40: class Bank:  ==>  class Bank:
break;...INVALID 
PROCESSING MUTANT: 40: class Bank:  ==>  class Bank:
continue;...INVALID 
PROCESSING MUTANT: 40: class Bank:  ==>  pass...INVALID 
PROCESSING MUTANT: 41:     def __init__(self):  ==>      def __init__(self):
    break;...INVALID 
PROCESSING MUTANT: 41:     def __init__(self):  ==>      def __init__(self):
    continue;...INVALID 
PROCESSING MUTANT: 41:     def __init__(self):  ==>      pass...INVALID 
PROCESSING MUTANT: 42:         self.accounts = {}  ==>          self.accounts = {}
        break;...INVALID 
PROCESSING MUTANT: 42:         self.accounts = {}  ==>          self.accounts = {}
        continue;...INVALID 
PROCESSING MUTANT: 42:         self.accounts = {}  ==>          pass...VALID [written to ./banking_system.mutant.89.py] 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account(self, account_number, owner):
    break;...INVALID 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account(self, account_number, owner):
    continue;...INVALID 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account ( account_number,self, owner):...VALID [written to ./banking_system.mutant.90.py] 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account(self , owner, account_number):...VALID [written to ./banking_system.mutant.91.py] 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      pass...INVALID 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account(self, owner):...VALID [written to ./banking_system.mutant.92.py] 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          if account_number not in self.accounts:
        break;...INVALID 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          if account_number not in self.accounts:
        continue;...INVALID 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          if not (account_number not in self.accounts):...VALID [written to ./banking_system.mutant.93.py] 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          if account_number  in self.accounts:...REDUNDANT 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          pass...INVALID 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[account_number] = BankAccount(account_number, owner)
            break;...INVALID 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[account_number] = BankAccount(account_number, owner)
            continue;...INVALID 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[account_number] = BankAccount ( owner,account_number)...VALID [written to ./banking_system.mutant.94.py] 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              pass...VALID [written to ./banking_system.mutant.95.py] 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[] = BankAccount(account_number, owner)...INVALID 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[ owner)...INVALID 
PROCESSING MUTANT: 47:             print("Account created successfully.")  ==>              print("Account created successfully.")
            break;...INVALID 
PROCESSING MUTANT: 47:             print("Account created successfully.")  ==>              print("Account created successfully.")
            continue;...INVALID 
PROCESSING MUTANT: 47:             print("Account created successfully.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 47:             print("Account created successfully.")  ==>              pass...VALID [written to ./banking_system.mutant.96.py] 
PROCESSING MUTANT: 48:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 48:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 48:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 49:             print("Account already exists.")  ==>              print("Account already exists.")
            break;...INVALID 
PROCESSING MUTANT: 49:             print("Account already exists.")  ==>              print("Account already exists.")
            continue;...INVALID 
PROCESSING MUTANT: 49:             print("Account already exists.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 49:             print("Account already exists.")  ==>              pass...VALID [written to ./banking_system.mutant.97.py] 
PROCESSING MUTANT: 51:     def get_account(self, account_number):  ==>      def get_account(self, account_number):
    break;...INVALID 
PROCESSING MUTANT: 51:     def get_account(self, account_number):  ==>      def get_account(self, account_number):
    continue;...INVALID 
PROCESSING MUTANT: 51:     def get_account(self, account_number):  ==>      def get_account ( account_number,self):...VALID [written to ./banking_system.mutant.98.py] 
PROCESSING MUTANT: 51:     def get_account(self, account_number):  ==>      pass...INVALID 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          return self.accounts.get(account_number, None)
        break;...INVALID 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          return self.accounts.get(account_number, None)
        continue;...INVALID 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          return self.accounts.get ( None,account_number)...VALID [written to ./banking_system.mutant.99.py] 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          return None...VALID [written to ./banking_system.mutant.100.py] 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 54:     def close_account(self, account_number):  ==>      def close_account(self, account_number):
    break;...INVALID 
PROCESSING MUTANT: 54:     def close_account(self, account_number):  ==>      def close_account(self, account_number):
    continue;...INVALID 
PROCESSING MUTANT: 54:     def close_account(self, account_number):  ==>      def close_account ( account_number,self):...VALID [written to ./banking_system.mutant.101.py] 
PROCESSING MUTANT: 54:     def close_account(self, account_number):  ==>      pass...INVALID 
PROCESSING MUTANT: 55:         if account_number in self.accounts:  ==>          if account_number in self.accounts:
        break;...INVALID 
PROCESSING MUTANT: 55:         if account_number in self.accounts:  ==>          if account_number in self.accounts:
        continue;...INVALID 
PROCESSING MUTANT: 55:         if account_number in self.accounts:  ==>          if not (account_number in self.accounts):...VALID [written to ./banking_system.mutant.102.py] 
PROCESSING MUTANT: 55:         if account_number in self.accounts:  ==>          pass...INVALID 
PROCESSING MUTANT: 56:             del self.accounts[account_number]  ==>              del self.accounts[account_number]
            break;...INVALID 
PROCESSING MUTANT: 56:             del self.accounts[account_number]  ==>              del self.accounts[account_number]
            continue;...INVALID 
PROCESSING MUTANT: 56:             del self.accounts[account_number]  ==>              pass...VALID [written to ./banking_system.mutant.103.py] 
PROCESSING MUTANT: 56:             del self.accounts[account_number]  ==>              del self.accounts[]...INVALID 
PROCESSING MUTANT: 57:             print("Account closed successfully.")  ==>              print("Account closed successfully.")
            break;...INVALID 
PROCESSING MUTANT: 57:             print("Account closed successfully.")  ==>              print("Account closed successfully.")
            continue;...INVALID 
PROCESSING MUTANT: 57:             print("Account closed successfully.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 57:             print("Account closed successfully.")  ==>              pass...VALID [written to ./banking_system.mutant.104.py] 
PROCESSING MUTANT: 58:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 58:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 58:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 59:             print("Account not found.")  ==>              print("Account not found.")
            break;...INVALID 
PROCESSING MUTANT: 59:             print("Account not found.")  ==>              print("Account not found.")
            continue;...INVALID 
PROCESSING MUTANT: 59:             print("Account not found.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 59:             print("Account not found.")  ==>              pass...VALID [written to ./banking_system.mutant.105.py] 
PROCESSING MUTANT: 61: def main():  ==>  def main():
break;...INVALID 
PROCESSING MUTANT: 61: def main():  ==>  def main():
continue;...INVALID 
PROCESSING MUTANT: 61: def main():  ==>  pass...INVALID 
PROCESSING MUTANT: 62:     bank = Bank()  ==>      bank = Bank()
    break;...INVALID 
PROCESSING MUTANT: 62:     bank = Bank()  ==>      bank = Bank()
    continue;...INVALID 
PROCESSING MUTANT: 62:     bank = Bank()  ==>      pass...VALID [written to ./banking_system.mutant.106.py] 
PROCESSING MUTANT: 64:     while True:  ==>      while True:
    break;...INVALID 
PROCESSING MUTANT: 64:     while True:  ==>      while True:
    continue;...INVALID 
PROCESSING MUTANT: 64:     while True:  ==>      if True:...INVALID 
PROCESSING MUTANT: 64:     while True:  ==>      while not (True):...VALID [written to ./banking_system.mutant.107.py] 
PROCESSING MUTANT: 64:     while True:  ==>      pass...INVALID 
PROCESSING MUTANT: 64:     while True:  ==>      while False:...REDUNDANT 
PROCESSING MUTANT: 65:         print("\nBanking System Menu")  ==>          print("\nBanking System Menu")
        break;...VALID [written to ./banking_system.mutant.108.py] 
PROCESSING MUTANT: 65:         print("\nBanking System Menu")  ==>          print("\nBanking System Menu")
        continue;...VALID [written to ./banking_system.mutant.109.py] 
PROCESSING MUTANT: 65:         print("\nBanking System Menu")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 65:         print("\nBanking System Menu")  ==>          pass...VALID [written to ./banking_system.mutant.110.py] 
PROCESSING MUTANT: 66:         print("1. Create Account")  ==>          print("1. Create Account")
        break;...VALID [written to ./banking_system.mutant.111.py] 
PROCESSING MUTANT: 66:         print("1. Create Account")  ==>          print("1. Create Account")
        continue;...VALID [written to ./banking_system.mutant.112.py] 
PROCESSING MUTANT: 66:         print("1. Create Account")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 66:         print("1. Create Account")  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 67:         print("2. Deposit Money")  ==>          print("2. Deposit Money")
        break;...VALID [written to ./banking_system.mutant.113.py] 
PROCESSING MUTANT: 67:         print("2. Deposit Money")  ==>          print("2. Deposit Money")
        continue;...VALID [written to ./banking_system.mutant.114.py] 
PROCESSING MUTANT: 67:         print("2. Deposit Money")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 67:         print("2. Deposit Money")  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 68:         print("3. Withdraw Money")  ==>          print("3. Withdraw Money")
        break;...VALID [written to ./banking_system.mutant.115.py] 
PROCESSING MUTANT: 68:         print("3. Withdraw Money")  ==>          print("3. Withdraw Money")
        continue;...VALID [written to ./banking_system.mutant.116.py] 
PROCESSING MUTANT: 68:         print("3. Withdraw Money")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 68:         print("3. Withdraw Money")  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 69:         print("4. Transfer Money")  ==>          print("4. Transfer Money")
        break;...VALID [written to ./banking_system.mutant.117.py] 
PROCESSING MUTANT: 69:         print("4. Transfer Money")  ==>          print("4. Transfer Money")
        continue;...VALID [written to ./banking_system.mutant.118.py] 
PROCESSING MUTANT: 69:         print("4. Transfer Money")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 69:         print("4. Transfer Money")  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 70:         print("5. Show Account Details")  ==>          print("5. Show Account Details")
        break;...VALID [written to ./banking_system.mutant.119.py] 
PROCESSING MUTANT: 70:         print("5. Show Account Details")  ==>          print("5. Show Account Details")
        continue;...VALID [written to ./banking_system.mutant.120.py] 
PROCESSING MUTANT: 70:         print("5. Show Account Details")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 70:         print("5. Show Account Details")  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 71:         print("6. Show Transaction History")  ==>          print("6. Show Transaction History")
        break;...VALID [written to ./banking_system.mutant.121.py] 
PROCESSING MUTANT: 71:         print("6. Show Transaction History")  ==>          print("6. Show Transaction History")
        continue;...VALID [written to ./banking_system.mutant.122.py] 
PROCESSING MUTANT: 71:         print("6. Show Transaction History")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 71:         print("6. Show Transaction History")  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 72:         print("7. Close Account")  ==>          print("7. Close Account")
        break;...VALID [written to ./banking_system.mutant.123.py] 
PROCESSING MUTANT: 72:         print("7. Close Account")  ==>          print("7. Close Account")
        continue;...VALID [written to ./banking_system.mutant.124.py] 
PROCESSING MUTANT: 72:         print("7. Close Account")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 72:         print("7. Close Account")  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 73:         print("8. Exit")  ==>          print("8. Exit")
        break;...VALID [written to ./banking_system.mutant.125.py] 
PROCESSING MUTANT: 73:         print("8. Exit")  ==>          print("8. Exit")
        continue;...VALID [written to ./banking_system.mutant.126.py] 
PROCESSING MUTANT: 73:         print("8. Exit")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 73:         print("8. Exit")  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 74:         choice = input("Enter choice: ")  ==>          choice = input("Enter choice: ")
        break;...VALID [written to ./banking_system.mutant.127.py] 
PROCESSING MUTANT: 74:         choice = input("Enter choice: ")  ==>          choice = input("Enter choice: ")
        continue;...VALID [written to ./banking_system.mutant.128.py] 
PROCESSING MUTANT: 74:         choice = input("Enter choice: ")  ==>          choice = input("")...REDUNDANT 
PROCESSING MUTANT: 74:         choice = input("Enter choice: ")  ==>          pass...VALID [written to ./banking_system.mutant.129.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice != '1':...VALID [written to ./banking_system.mutant.130.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice <= '1':...VALID [written to ./banking_system.mutant.131.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice >= '1':...VALID [written to ./banking_system.mutant.132.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice > '1':...VALID [written to ./banking_system.mutant.133.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice < '1':...VALID [written to ./banking_system.mutant.134.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '0':...REDUNDANT 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '(1+1)':...REDUNDANT 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '(1-1)':...REDUNDANT 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '1':
        break;...INVALID 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '1':
        continue;...INVALID 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if not (choice == '1'):...VALID [written to ./banking_system.mutant.135.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          pass...INVALID 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '':...REDUNDANT 
PROCESSING MUTANT: 77:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.136.py] 
PROCESSING MUTANT: 77:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.137.py] 
PROCESSING MUTANT: 77:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.138.py] 
PROCESSING MUTANT: 77:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.139.py] 
PROCESSING MUTANT: 78:             owner = input("Enter account owner's name: ")  ==>              owner = input("Enter account owner's name: ")
            break;...VALID [written to ./banking_system.mutant.140.py] 
PROCESSING MUTANT: 78:             owner = input("Enter account owner's name: ")  ==>              owner = input("Enter account owner's name: ")
            continue;...VALID [written to ./banking_system.mutant.141.py] 
PROCESSING MUTANT: 78:             owner = input("Enter account owner's name: ")  ==>              owner = input("")...REDUNDANT 
PROCESSING MUTANT: 78:             owner = input("Enter account owner's name: ")  ==>              pass...VALID [written to ./banking_system.mutant.142.py] 
PROCESSING MUTANT: 79:             bank.create_account(account_number, owner)  ==>              bank.create_account(account_number, owner)
            break;...VALID [written to ./banking_system.mutant.143.py] 
PROCESSING MUTANT: 79:             bank.create_account(account_number, owner)  ==>              bank.create_account(account_number, owner)
            continue;...VALID [written to ./banking_system.mutant.144.py] 
PROCESSING MUTANT: 79:             bank.create_account(account_number, owner)  ==>              bank.create_account ( owner,account_number)...VALID [written to ./banking_system.mutant.145.py] 
PROCESSING MUTANT: 79:             bank.create_account(account_number, owner)  ==>              pass...VALID [written to ./banking_system.mutant.146.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice != '2':...VALID [written to ./banking_system.mutant.147.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice <= '2':...VALID [written to ./banking_system.mutant.148.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice >= '2':...VALID [written to ./banking_system.mutant.149.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice > '2':...VALID [written to ./banking_system.mutant.150.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice < '2':...VALID [written to ./banking_system.mutant.151.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.152.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '(2+1)':...REDUNDANT 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '(2-1)':...REDUNDANT 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '2':
        break;...INVALID 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '2':
        continue;...INVALID 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif not (choice == '2'):...VALID [written to ./banking_system.mutant.153.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          pass...INVALID 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 81:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.154.py] 
PROCESSING MUTANT: 81:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.155.py] 
PROCESSING MUTANT: 81:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.156.py] 
PROCESSING MUTANT: 81:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.157.py] 
PROCESSING MUTANT: 82:             amount = float(input("Enter amount to deposit: "))    ==>              amount = float(input("Enter amount to deposit: "))  
            break;...VALID [written to ./banking_system.mutant.158.py] 
PROCESSING MUTANT: 82:             amount = float(input("Enter amount to deposit: "))    ==>              amount = float(input("Enter amount to deposit: "))  
            continue;...VALID [written to ./banking_system.mutant.159.py] 
PROCESSING MUTANT: 82:             amount = float(input("Enter amount to deposit: "))    ==>              amount = float(input(""))  ...REDUNDANT 
PROCESSING MUTANT: 82:             amount = float(input("Enter amount to deposit: "))    ==>              pass...VALID [written to ./banking_system.mutant.160.py] 
PROCESSING MUTANT: 83:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            break;...VALID [written to ./banking_system.mutant.161.py] 
PROCESSING MUTANT: 83:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.162.py] 
PROCESSING MUTANT: 83:             account = bank.get_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.163.py] 
PROCESSING MUTANT: 84:             if account:  ==>              if account:
            break;...INVALID 
PROCESSING MUTANT: 84:             if account:  ==>              if account:
            continue;...INVALID 
PROCESSING MUTANT: 84:             if account:  ==>              if not (account):...VALID [written to ./banking_system.mutant.164.py] 
PROCESSING MUTANT: 84:             if account:  ==>              pass...INVALID 
PROCESSING MUTANT: 85:                 account.deposit(amount)  ==>                  account.deposit(amount)
                break;...VALID [written to ./banking_system.mutant.165.py] 
PROCESSING MUTANT: 85:                 account.deposit(amount)  ==>                  account.deposit(amount)
                continue;...VALID [written to ./banking_system.mutant.166.py] 
PROCESSING MUTANT: 85:                 account.deposit(amount)  ==>                  pass...VALID [written to ./banking_system.mutant.167.py] 
PROCESSING MUTANT: 86:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 86:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 86:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 87:                 print("Account not found.")  ==>                  print("Account not found.")
                break;...VALID [written to ./banking_system.mutant.168.py] 
PROCESSING MUTANT: 87:                 print("Account not found.")  ==>                  print("Account not found.")
                continue;...VALID [written to ./banking_system.mutant.169.py] 
PROCESSING MUTANT: 87:                 print("Account not found.")  ==>                  print("")...VALID [written to ./banking_system.mutant.170.py] 
PROCESSING MUTANT: 87:                 print("Account not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.171.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice != '3':...VALID [written to ./banking_system.mutant.172.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice <= '3':...VALID [written to ./banking_system.mutant.173.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice >= '3':...VALID [written to ./banking_system.mutant.174.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice > '3':...VALID [written to ./banking_system.mutant.175.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice < '3':...VALID [written to ./banking_system.mutant.176.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.177.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '(3+1)':...REDUNDANT 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '(3-1)':...REDUNDANT 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '3':
        break;...INVALID 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '3':
        continue;...INVALID 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif not (choice == '3'):...VALID [written to ./banking_system.mutant.178.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          pass...INVALID 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 89:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.179.py] 
PROCESSING MUTANT: 89:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.180.py] 
PROCESSING MUTANT: 89:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.181.py] 
PROCESSING MUTANT: 89:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.182.py] 
PROCESSING MUTANT: 90:             amount = float(input("Enter amount to withdraw: "))    ==>              amount = float(input("Enter amount to withdraw: "))  
            break;...VALID [written to ./banking_system.mutant.183.py] 
PROCESSING MUTANT: 90:             amount = float(input("Enter amount to withdraw: "))    ==>              amount = float(input("Enter amount to withdraw: "))  
            continue;...VALID [written to ./banking_system.mutant.184.py] 
PROCESSING MUTANT: 90:             amount = float(input("Enter amount to withdraw: "))    ==>              amount = float(input(""))  ...REDUNDANT 
PROCESSING MUTANT: 90:             amount = float(input("Enter amount to withdraw: "))    ==>              pass...VALID [written to ./banking_system.mutant.185.py] 
PROCESSING MUTANT: 91:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            break;...VALID [written to ./banking_system.mutant.186.py] 
PROCESSING MUTANT: 91:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.187.py] 
PROCESSING MUTANT: 91:             account = bank.get_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.188.py] 
PROCESSING MUTANT: 92:             if account:  ==>              if account:
            break;...INVALID 
PROCESSING MUTANT: 92:             if account:  ==>              if account:
            continue;...INVALID 
PROCESSING MUTANT: 92:             if account:  ==>              if not (account):...VALID [written to ./banking_system.mutant.189.py] 
PROCESSING MUTANT: 92:             if account:  ==>              pass...INVALID 
PROCESSING MUTANT: 93:                 account.withdraw(amount)  ==>                  account.withdraw(amount)
                break;...VALID [written to ./banking_system.mutant.190.py] 
PROCESSING MUTANT: 93:                 account.withdraw(amount)  ==>                  account.withdraw(amount)
                continue;...VALID [written to ./banking_system.mutant.191.py] 
PROCESSING MUTANT: 93:                 account.withdraw(amount)  ==>                  pass...VALID [written to ./banking_system.mutant.192.py] 
PROCESSING MUTANT: 94:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 94:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 94:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 95:                 print("Account not found.")  ==>                  print("Account not found.")
                break;...VALID [written to ./banking_system.mutant.193.py] 
PROCESSING MUTANT: 95:                 print("Account not found.")  ==>                  print("Account not found.")
                continue;...VALID [written to ./banking_system.mutant.194.py] 
PROCESSING MUTANT: 95:                 print("Account not found.")  ==>                  print("")...VALID [written to ./banking_system.mutant.195.py] 
PROCESSING MUTANT: 95:                 print("Account not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.196.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice != '4':...VALID [written to ./banking_system.mutant.197.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice <= '4':...VALID [written to ./banking_system.mutant.198.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice >= '4':...VALID [written to ./banking_system.mutant.199.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice > '4':...VALID [written to ./banking_system.mutant.200.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice < '4':...VALID [written to ./banking_system.mutant.201.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.202.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '(4+1)':...REDUNDANT 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '(4-1)':...REDUNDANT 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '4':
        break;...INVALID 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '4':
        continue;...INVALID 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif not (choice == '4'):...VALID [written to ./banking_system.mutant.203.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          pass...INVALID 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 97:             source_account_number = input("Enter source account number: ")  ==>              source_account_number = input("Enter source account number: ")
            break;...VALID [written to ./banking_system.mutant.204.py] 
PROCESSING MUTANT: 97:             source_account_number = input("Enter source account number: ")  ==>              source_account_number = input("Enter source account number: ")
            continue;...VALID [written to ./banking_system.mutant.205.py] 
PROCESSING MUTANT: 97:             source_account_number = input("Enter source account number: ")  ==>              source_account_number = input("")...REDUNDANT 
PROCESSING MUTANT: 97:             source_account_number = input("Enter source account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.206.py] 
PROCESSING MUTANT: 98:             target_account_number = input("Enter target account number: ")  ==>              target_account_number = input("Enter target account number: ")
            break;...VALID [written to ./banking_system.mutant.207.py] 
PROCESSING MUTANT: 98:             target_account_number = input("Enter target account number: ")  ==>              target_account_number = input("Enter target account number: ")
            continue;...VALID [written to ./banking_system.mutant.208.py] 
PROCESSING MUTANT: 98:             target_account_number = input("Enter target account number: ")  ==>              target_account_number = input("")...REDUNDANT 
PROCESSING MUTANT: 98:             target_account_number = input("Enter target account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.209.py] 
PROCESSING MUTANT: 99:             amount = float(input("Enter amount to transfer: "))    ==>              amount = float(input("Enter amount to transfer: "))  
            break;...VALID [written to ./banking_system.mutant.210.py] 
PROCESSING MUTANT: 99:             amount = float(input("Enter amount to transfer: "))    ==>              amount = float(input("Enter amount to transfer: "))  
            continue;...VALID [written to ./banking_system.mutant.211.py] 
PROCESSING MUTANT: 99:             amount = float(input("Enter amount to transfer: "))    ==>              amount = float(input(""))  ...REDUNDANT 
PROCESSING MUTANT: 99:             amount = float(input("Enter amount to transfer: "))    ==>              pass...VALID [written to ./banking_system.mutant.212.py] 
PROCESSING MUTANT: 100:             source_account = bank.get_account(source_account_number)  ==>              source_account = bank.get_account(source_account_number)
            break;...VALID [written to ./banking_system.mutant.213.py] 
PROCESSING MUTANT: 100:             source_account = bank.get_account(source_account_number)  ==>              source_account = bank.get_account(source_account_number)
            continue;...VALID [written to ./banking_system.mutant.214.py] 
PROCESSING MUTANT: 100:             source_account = bank.get_account(source_account_number)  ==>              pass...VALID [written to ./banking_system.mutant.215.py] 
PROCESSING MUTANT: 101:             target_account = bank.get_account(target_account_number)  ==>              target_account = bank.get_account(target_account_number)
            break;...VALID [written to ./banking_system.mutant.216.py] 
PROCESSING MUTANT: 101:             target_account = bank.get_account(target_account_number)  ==>              target_account = bank.get_account(target_account_number)
            continue;...VALID [written to ./banking_system.mutant.217.py] 
PROCESSING MUTANT: 101:             target_account = bank.get_account(target_account_number)  ==>              pass...VALID [written to ./banking_system.mutant.218.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_account and target_account:
            break;...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_account and target_account:
            continue;...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if not (source_account and target_account):...VALID [written to ./banking_system.mutant.219.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_account  or target_account:...VALID [written to ./banking_system.mutant.220.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_account and True...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>  True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>   True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>    True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>     True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>      True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>       True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>        True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>         True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>          True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>           True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>            True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>             True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              iTrue and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              ifTrue and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if True and target_account:...VALID [written to ./banking_system.mutant.221.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if sTrue and target_account:...VALID [written to ./banking_system.mutant.222.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if soTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if souTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if sourTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if sourcTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if sourceTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_True and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_aTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_acTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accoTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accouTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accounTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accountTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              pass...INVALID 
PROCESSING MUTANT: 103:                 source_account.transfer(amount, target_account)  ==>                  source_account.transfer(amount, target_account)
                break;...VALID [written to ./banking_system.mutant.223.py] 
PROCESSING MUTANT: 103:                 source_account.transfer(amount, target_account)  ==>                  source_account.transfer(amount, target_account)
                continue;...VALID [written to ./banking_system.mutant.224.py] 
PROCESSING MUTANT: 103:                 source_account.transfer(amount, target_account)  ==>                  source_account.transfer ( target_account,amount)...VALID [written to ./banking_system.mutant.225.py] 
PROCESSING MUTANT: 103:                 source_account.transfer(amount, target_account)  ==>                  pass...VALID [written to ./banking_system.mutant.226.py] 
PROCESSING MUTANT: 104:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 104:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 104:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print("One or more accounts not found.")
                break;...VALID [written to ./banking_system.mutant.227.py] 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print("One or more accounts not found.")
                continue;...VALID [written to ./banking_system.mutant.228.py] 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print("")...REDUNDANT 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print("One or False...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>  False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>   False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>    False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>     False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>      False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>       False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>        False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>         False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>          False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>           False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>            False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>             False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>              False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>               False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                 False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  pFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  prFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  priFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  prinFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  printFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print(False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.229.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice != '5':...VALID [written to ./banking_system.mutant.230.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice <= '5':...VALID [written to ./banking_system.mutant.231.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice >= '5':...VALID [written to ./banking_system.mutant.232.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice > '5':...VALID [written to ./banking_system.mutant.233.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice < '5':...VALID [written to ./banking_system.mutant.234.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.235.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '(5+1)':...REDUNDANT 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '(5-1)':...REDUNDANT 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '5':
        break;...INVALID 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '5':
        continue;...INVALID 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif not (choice == '5'):...VALID [written to ./banking_system.mutant.236.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          pass...INVALID 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 107:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.237.py] 
PROCESSING MUTANT: 107:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.238.py] 
PROCESSING MUTANT: 107:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.239.py] 
PROCESSING MUTANT: 107:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.240.py] 
PROCESSING MUTANT: 108:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            break;...VALID [written to ./banking_system.mutant.241.py] 
PROCESSING MUTANT: 108:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.242.py] 
PROCESSING MUTANT: 108:             account = bank.get_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.243.py] 
PROCESSING MUTANT: 109:             if account:  ==>              if account:
            break;...INVALID 
PROCESSING MUTANT: 109:             if account:  ==>              if account:
            continue;...INVALID 
PROCESSING MUTANT: 109:             if account:  ==>              if not (account):...VALID [written to ./banking_system.mutant.244.py] 
PROCESSING MUTANT: 109:             if account:  ==>              pass...INVALID 
PROCESSING MUTANT: 110:                 print(account)  ==>                  print(account)
                break;...VALID [written to ./banking_system.mutant.245.py] 
PROCESSING MUTANT: 110:                 print(account)  ==>                  print(account)
                continue;...VALID [written to ./banking_system.mutant.246.py] 
PROCESSING MUTANT: 110:                 print(account)  ==>                  pass...VALID [written to ./banking_system.mutant.247.py] 
PROCESSING MUTANT: 111:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 111:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 111:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 112:                 print("Account not found.")  ==>                  print("Account not found.")
                break;...VALID [written to ./banking_system.mutant.248.py] 
PROCESSING MUTANT: 112:                 print("Account not found.")  ==>                  print("Account not found.")
                continue;...VALID [written to ./banking_system.mutant.249.py] 
PROCESSING MUTANT: 112:                 print("Account not found.")  ==>                  print("")...VALID [written to ./banking_system.mutant.250.py] 
PROCESSING MUTANT: 112:                 print("Account not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.251.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice != '6':...VALID [written to ./banking_system.mutant.252.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice <= '6':...VALID [written to ./banking_system.mutant.253.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice >= '6':...VALID [written to ./banking_system.mutant.254.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice > '6':...VALID [written to ./banking_system.mutant.255.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice < '6':...VALID [written to ./banking_system.mutant.256.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.257.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '(6+1)':...REDUNDANT 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '(6-1)':...REDUNDANT 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '6':
        break;...INVALID 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '6':
        continue;...INVALID 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif not (choice == '6'):...VALID [written to ./banking_system.mutant.258.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          pass...INVALID 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 114:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.259.py] 
PROCESSING MUTANT: 114:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.260.py] 
PROCESSING MUTANT: 114:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.261.py] 
PROCESSING MUTANT: 114:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.262.py] 
PROCESSING MUTANT: 115:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            break;...VALID [written to ./banking_system.mutant.263.py] 
PROCESSING MUTANT: 115:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.264.py] 
PROCESSING MUTANT: 115:             account = bank.get_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.265.py] 
PROCESSING MUTANT: 116:             if account:  ==>              if account:
            break;...INVALID 
PROCESSING MUTANT: 116:             if account:  ==>              if account:
            continue;...INVALID 
PROCESSING MUTANT: 116:             if account:  ==>              if not (account):...VALID [written to ./banking_system.mutant.266.py] 
PROCESSING MUTANT: 116:             if account:  ==>              pass...INVALID 
PROCESSING MUTANT: 117:                 print("Transaction History:")  ==>                  print("Transaction History:")
                break;...VALID [written to ./banking_system.mutant.267.py] 
PROCESSING MUTANT: 117:                 print("Transaction History:")  ==>                  print("Transaction History:")
                continue;...VALID [written to ./banking_system.mutant.268.py] 
PROCESSING MUTANT: 117:                 print("Transaction History:")  ==>                  print("")...REDUNDANT 
PROCESSING MUTANT: 117:                 print("Transaction History:")  ==>                  pass...VALID [written to ./banking_system.mutant.269.py] 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  for transaction in account.get_transaction_history():
                break;...INVALID 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  for transaction in account.get_transaction_history():
                continue;...INVALID 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  f andtransaction in account.get_transaction_history():...INVALID 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  for False...INVALID 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  pass...INVALID 
PROCESSING MUTANT: 119:                     print(transaction)  ==>                      print(transaction)
                    break;...VALID [written to ./banking_system.mutant.270.py] 
PROCESSING MUTANT: 119:                     print(transaction)  ==>                      print(transaction)
                    continue;...VALID [written to ./banking_system.mutant.271.py] 
PROCESSING MUTANT: 119:                     print(transaction)  ==>                      pass...VALID [written to ./banking_system.mutant.272.py] 
PROCESSING MUTANT: 120:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 120:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 120:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 121:                 print("Account not found.")  ==>                  print("Account not found.")
                break;...VALID [written to ./banking_system.mutant.273.py] 
PROCESSING MUTANT: 121:                 print("Account not found.")  ==>                  print("Account not found.")
                continue;...VALID [written to ./banking_system.mutant.274.py] 
PROCESSING MUTANT: 121:                 print("Account not found.")  ==>                  print("")...VALID [written to ./banking_system.mutant.275.py] 
PROCESSING MUTANT: 121:                 print("Account not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.276.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice != '7':...VALID [written to ./banking_system.mutant.277.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice <= '7':...VALID [written to ./banking_system.mutant.278.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice >= '7':...VALID [written to ./banking_system.mutant.279.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice > '7':...VALID [written to ./banking_system.mutant.280.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice < '7':...VALID [written to ./banking_system.mutant.281.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.282.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '(7+1)':...REDUNDANT 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '(7-1)':...REDUNDANT 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '7':
        break;...INVALID 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '7':
        continue;...INVALID 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif not (choice == '7'):...VALID [written to ./banking_system.mutant.283.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          pass...INVALID 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 123:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.284.py] 
PROCESSING MUTANT: 123:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.285.py] 
PROCESSING MUTANT: 123:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.286.py] 
PROCESSING MUTANT: 123:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.287.py] 
PROCESSING MUTANT: 124:             bank.close_account(account_number)  ==>              bank.close_account(account_number)
            break;...VALID [written to ./banking_system.mutant.288.py] 
PROCESSING MUTANT: 124:             bank.close_account(account_number)  ==>              bank.close_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.289.py] 
PROCESSING MUTANT: 124:             bank.close_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.290.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice != '8':...VALID [written to ./banking_system.mutant.291.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice <= '8':...VALID [written to ./banking_system.mutant.292.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice >= '8':...VALID [written to ./banking_system.mutant.293.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice > '8':...VALID [written to ./banking_system.mutant.294.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice < '8':...VALID [written to ./banking_system.mutant.295.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.296.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '(8+1)':...REDUNDANT 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '(8-1)':...REDUNDANT 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '8':
        break;...INVALID 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '8':
        continue;...INVALID 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif not (choice == '8'):...VALID [written to ./banking_system.mutant.297.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          pass...INVALID 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '':...REDUNDANT 
LINE 126:             break APPEARS TO BE COMMENT OR DEAD CODE, SKIPPING...
PROCESSING MUTANT: 127:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 127:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 127:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 128:             print("Invalid choice. Please select a valid option.")  ==>              print("Invalid choice. Please select a valid option.")
            break;...VALID [written to ./banking_system.mutant.298.py] 
PROCESSING MUTANT: 128:             print("Invalid choice. Please select a valid option.")  ==>              print("Invalid choice. Please select a valid option.")
            continue;...VALID [written to ./banking_system.mutant.299.py] 
PROCESSING MUTANT: 128:             print("Invalid choice. Please select a valid option.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 128:             print("Invalid choice. Please select a valid option.")  ==>              pass...VALID [written to ./banking_system.mutant.300.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ != '__main__':...VALID [written to ./banking_system.mutant.301.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ <= '__main__':...VALID [written to ./banking_system.mutant.302.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ >= '__main__':...VALID [written to ./banking_system.mutant.303.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ > '__main__':...VALID [written to ./banking_system.mutant.304.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ < '__main__':...VALID [written to ./banking_system.mutant.305.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ == '__main__':
break;...INVALID 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ == '__main__':
continue;...INVALID 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if not (__name__ == '__main__'):...VALID [written to ./banking_system.mutant.306.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  pass...INVALID 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ == '':...REDUNDANT 
PROCESSING MUTANT: 131:     main()  ==>      main()
    break;...INVALID 
PROCESSING MUTANT: 131:     main()  ==>      main()
    continue;...INVALID 
PROCESSING MUTANT: 131:     main()  ==>      pass...VALID [written to ./banking_system.mutant.307.py] 
308 VALID MUTANTS
314 INVALID MUTANTS
119 REDUNDANT MUTANTS
Valid Percentage: 41.56545209176788%
likhitharoyal@Likhithas-MBP project_cs567 % mutate mutations banking_system.py
*** UNIVERSALMUTATOR ***
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/mutate", line 8, in <module>
    sys.exit(main())
             ~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/universalmutator/genmutants.py", line 381, in main
    with open(sourceFile, 'r') as file:
         ~~~~^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'mutations'
likhitharoyal@Likhithas-MBP project_cs567 % mkdir mutations

likhitharoyal@Likhithas-MBP project_cs567 % mutate banking_system.py --output-dir ./mutations

*** UNIVERSALMUTATOR ***
MUTATING WITH RULES: universal.rules, --output-dir.rules, ./mutations
FAILED TO FIND RULE --output-dir.rules AS BUILT-IN...
COULD NOT FIND RULE FILE --output-dir.rules!  SKIPPING...
FAILED TO FIND RULE ./mutations.rules AS BUILT-IN...
COULD NOT FIND RULE FILE ./mutations.rules!  SKIPPING...
SKIPPED 79 MUTANTS ONLY CHANGING STRING LITERALS
440 MUTANTS GENERATED BY RULES
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/mutate", line 8, in <module>
    sys.exit(main())
             ~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/universalmutator/genmutants.py", line 424, in main
    handler = handlers[language].handler
              ~~~~~~~~^^^^^^^^^^
KeyError: '--output-dir'
likhitharoyal@Likhithas-MBP project_cs567 % mv *.mutant.* mutations/
likhitharoyal@Likhithas-MBP project_cs567 % mutate banking_system.py --output-dir ./mutations

*** UNIVERSALMUTATOR ***
MUTATING WITH RULES: universal.rules, --output-dir.rules, ./mutations
FAILED TO FIND RULE --output-dir.rules AS BUILT-IN...
COULD NOT FIND RULE FILE --output-dir.rules!  SKIPPING...
FAILED TO FIND RULE ./mutations.rules AS BUILT-IN...
COULD NOT FIND RULE FILE ./mutations.rules!  SKIPPING...
SKIPPED 79 MUTANTS ONLY CHANGING STRING LITERALS
440 MUTANTS GENERATED BY RULES
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/mutate", line 8, in <module>
    sys.exit(main())
             ~~~~^^
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/universalmutator/genmutants.py", line 424, in main
    handler = handlers[language].handler
              ~~~~~~~~^^^^^^^^^^
KeyError: '--output-dir'
likhitharoyal@Likhithas-MBP project_cs567 % touch organize_mutants.py

likhitharoyal@Likhithas-MBP project_cs567 % nano organize_mutants.py

likhitharoyal@Likhithas-MBP project_cs567 % ^[[200~python3 organize_mutants.py
zsh: bad pattern: ^[[200~python3
likhitharoyal@Likhithas-MBP project_cs567 % python3 organize_mutants.py

*** UNIVERSALMUTATOR ***
MUTATING WITH RULES: universal.rules, python.rules
SKIPPED 154 MUTANTS ONLY CHANGING STRING LITERALS
745 MUTANTS GENERATED BY RULES
PROCESSING MUTANT: 2: class BankAccount:  ==>  class BankAccount:
break;...INVALID 
PROCESSING MUTANT: 2: class BankAccount:  ==>  class BankAccount:
continue;...INVALID 
PROCESSING MUTANT: 2: class BankAccount:  ==>  pass...INVALID 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=1):...VALID [written to ./banking_system.mutant.0.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=-1):...VALID [written to ./banking_system.mutant.1.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=(0+1)):...REDUNDANT 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=(0-1)):...REDUNDANT 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=0):
    break;...INVALID 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, owner, balance=0):
    continue;...INVALID 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__ ( account_number,self, owner, balance=0):...VALID [written to ./banking_system.mutant.2.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self , owner, account_number, balance=0):...VALID [written to ./banking_system.mutant.3.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      pass...INVALID 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, balance=0):...VALID [written to ./banking_system.mutant.4.py] 
PROCESSING MUTANT: 3:     def __init__(self, account_number, owner, balance=0):  ==>      def __init__(self, account_number, balance=0):...VALID [written to ./banking_system.mutant.5.py] 
PROCESSING MUTANT: 4:         self.account_number = account_number  ==>          self.account_number = account_number
        break;...INVALID 
PROCESSING MUTANT: 4:         self.account_number = account_number  ==>          self.account_number = account_number
        continue;...INVALID 
PROCESSING MUTANT: 4:         self.account_number = account_number  ==>          pass...VALID [written to ./banking_system.mutant.6.py] 
PROCESSING MUTANT: 5:         self.owner = owner  ==>          self.owner = owner
        break;...INVALID 
PROCESSING MUTANT: 5:         self.owner = owner  ==>          self.owner = owner
        continue;...INVALID 
PROCESSING MUTANT: 5:         self.owner = owner  ==>          pass...VALID [written to ./banking_system.mutant.7.py] 
PROCESSING MUTANT: 6:         self.balance = balance  ==>          self.balance = balance
        break;...INVALID 
PROCESSING MUTANT: 6:         self.balance = balance  ==>          self.balance = balance
        continue;...INVALID 
PROCESSING MUTANT: 6:         self.balance = balance  ==>          pass...VALID [written to ./banking_system.mutant.8.py] 
PROCESSING MUTANT: 7:         self.transaction_history = []  ==>          self.transaction_history = []
        break;...INVALID 
PROCESSING MUTANT: 7:         self.transaction_history = []  ==>          self.transaction_history = []
        continue;...INVALID 
PROCESSING MUTANT: 7:         self.transaction_history = []  ==>          pass...VALID [written to ./banking_system.mutant.9.py] 
PROCESSING MUTANT: 9:     def deposit(self, amount):  ==>      def deposit(self, amount):
    break;...INVALID 
PROCESSING MUTANT: 9:     def deposit(self, amount):  ==>      def deposit(self, amount):
    continue;...INVALID 
PROCESSING MUTANT: 9:     def deposit(self, amount):  ==>      def deposit ( amount,self):...VALID [written to ./banking_system.mutant.10.py] 
PROCESSING MUTANT: 9:     def deposit(self, amount):  ==>      pass...INVALID 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount < 0:...VALID [written to ./banking_system.mutant.11.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount == 0:...VALID [written to ./banking_system.mutant.12.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount >= 0:...VALID [written to ./banking_system.mutant.13.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount <= 0:...VALID [written to ./banking_system.mutant.14.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount != 0:...VALID [written to ./banking_system.mutant.15.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > 1:...VALID [written to ./banking_system.mutant.16.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > -1:...VALID [written to ./banking_system.mutant.17.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > (0+1):...REDUNDANT 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > (0-1):...REDUNDANT 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > 0:
        break;...INVALID 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if amount > 0:
        continue;...INVALID 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          if not (amount > 0):...VALID [written to ./banking_system.mutant.18.py] 
PROCESSING MUTANT: 10:         if amount > 0:  ==>          pass...INVALID 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance -= amount...VALID [written to ./banking_system.mutant.19.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance *= amount...VALID [written to ./banking_system.mutant.20.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance /= amount...VALID [written to ./banking_system.mutant.21.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance %= amount...VALID [written to ./banking_system.mutant.22.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance =+ amount...VALID [written to ./banking_system.mutant.23.py] 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance += amount
            break;...INVALID 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              self.balance += amount
            continue;...INVALID 
PROCESSING MUTANT: 11:             self.balance += amount  ==>              pass...VALID [written to ./banking_system.mutant.24.py] 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              self.transaction_history.append(f"Deposit: +${amount:.2f}")
            break;...INVALID 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              self.transaction_history.append(f"Deposit: +${amount:.2f}")
            continue;...INVALID 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              self.transaction_history.append(f"")...VALID [written to ./banking_system.mutant.25.py] 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              self.transaction_history.appbegin(f"Deposit: +${amount:.2f}")...REDUNDANT 
PROCESSING MUTANT: 12:             self.transaction_history.append(f"Deposit: +${amount:.2f}")  ==>              pass...VALID [written to ./banking_system.mutant.26.py] 
PROCESSING MUTANT: 13:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 13:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 13:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 14:             print("Invalid deposit amount.")  ==>              print("Invalid deposit amount.")
            break;...INVALID 
PROCESSING MUTANT: 14:             print("Invalid deposit amount.")  ==>              print("Invalid deposit amount.")
            continue;...INVALID 
PROCESSING MUTANT: 14:             print("Invalid deposit amount.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 14:             print("Invalid deposit amount.")  ==>              pass...VALID [written to ./banking_system.mutant.27.py] 
PROCESSING MUTANT: 16:     def withdraw(self, amount):  ==>      def withdraw(self, amount):
    break;...INVALID 
PROCESSING MUTANT: 16:     def withdraw(self, amount):  ==>      def withdraw(self, amount):
    continue;...INVALID 
PROCESSING MUTANT: 16:     def withdraw(self, amount):  ==>      def withdraw ( amount,self):...VALID [written to ./banking_system.mutant.28.py] 
PROCESSING MUTANT: 16:     def withdraw(self, amount):  ==>      pass...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount == self.balance:...VALID [written to ./banking_system.mutant.29.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount != self.balance:...VALID [written to ./banking_system.mutant.30.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount < self.balance:...VALID [written to ./banking_system.mutant.31.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount > self.balance:...VALID [written to ./banking_system.mutant.32.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount >= self.balance:...VALID [written to ./banking_system.mutant.33.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount === self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <== self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount >== self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount !== self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount < 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.34.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount == 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.35.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount >= 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.36.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount <= 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.37.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount != 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.38.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 1 and amount <= self.balance:...VALID [written to ./banking_system.mutant.39.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > -1 and amount <= self.balance:...VALID [written to ./banking_system.mutant.40.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > (0+1) and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > (0-1) and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <= self.balance:
        break;...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <= self.balance:
        continue;...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if not (amount > 0 and amount <= self.balance):...VALID [written to ./banking_system.mutant.41.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0  or amount <= self.balance:...VALID [written to ./banking_system.mutant.42.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and True...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>  True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>   True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>    True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>     True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>      True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>       True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>        True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>         True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          iTrue and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          ifTrue and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if True and amount <= self.balance:...VALID [written to ./banking_system.mutant.43.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if aTrue and amount <= self.balance:...VALID [written to ./banking_system.mutant.44.py] 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amoTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amouTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amounTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amountTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount >True and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > True and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 17:         if amount > 0 and amount <= self.balance:  ==>          pass...INVALID 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance += amount...VALID [written to ./banking_system.mutant.45.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance *= amount...VALID [written to ./banking_system.mutant.46.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance /= amount...VALID [written to ./banking_system.mutant.47.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance %= amount...VALID [written to ./banking_system.mutant.48.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance =- amount...VALID [written to ./banking_system.mutant.49.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance = amount...VALID [written to ./banking_system.mutant.50.py] 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance -= amount
            break;...INVALID 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              self.balance -= amount
            continue;...INVALID 
PROCESSING MUTANT: 18:             self.balance -= amount  ==>              pass...VALID [written to ./banking_system.mutant.51.py] 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              self.transaction_history.append(f"Withdrawal: -${amount:.2f}")
            break;...INVALID 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              self.transaction_history.append(f"Withdrawal: -${amount:.2f}")
            continue;...INVALID 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              self.transaction_history.append(f"")...VALID [written to ./banking_system.mutant.52.py] 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              self.transaction_history.appbegin(f"Withdrawal: -${amount:.2f}")...REDUNDANT 
PROCESSING MUTANT: 19:             self.transaction_history.append(f"Withdrawal: -${amount:.2f}")  ==>              pass...VALID [written to ./banking_system.mutant.53.py] 
PROCESSING MUTANT: 20:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 20:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 20:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print("Invalid withdrawal amount or insufficient funds.")
            break;...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print("Invalid withdrawal amount or insufficient funds.")
            continue;...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print("Invalid withdrawal amount or False...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>  False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>   False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>    False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>     False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>      False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>       False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>        False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>         False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>          False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>           False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>            False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>             False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              pFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              prFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              priFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              prinFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              printFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              print(False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 21:             print("Invalid withdrawal amount or insufficient funds.")  ==>              pass...VALID [written to ./banking_system.mutant.54.py] 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer(self, amount, recipient_account):
    break;...INVALID 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer(self, amount, recipient_account):
    continue;...INVALID 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer ( amount,self, recipient_account):...VALID [written to ./banking_system.mutant.55.py] 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer(self , recipient_account, amount):...VALID [written to ./banking_system.mutant.56.py] 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      pass...INVALID 
PROCESSING MUTANT: 23:     def transfer(self, amount, recipient_account):  ==>      def transfer(self, recipient_account):...VALID [written to ./banking_system.mutant.57.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount == self.balance:...VALID [written to ./banking_system.mutant.58.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount != self.balance:...VALID [written to ./banking_system.mutant.59.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount < self.balance:...VALID [written to ./banking_system.mutant.60.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount > self.balance:...VALID [written to ./banking_system.mutant.61.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount >= self.balance:...VALID [written to ./banking_system.mutant.62.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount === self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <== self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount >== self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount !== self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount < 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.63.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount == 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.64.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount >= 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.65.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount <= 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.66.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount != 0 and amount <= self.balance:...VALID [written to ./banking_system.mutant.67.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 1 and amount <= self.balance:...VALID [written to ./banking_system.mutant.68.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > -1 and amount <= self.balance:...VALID [written to ./banking_system.mutant.69.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > (0+1) and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > (0-1) and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <= self.balance:
        break;...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and amount <= self.balance:
        continue;...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if not (amount > 0 and amount <= self.balance):...VALID [written to ./banking_system.mutant.70.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0  or amount <= self.balance:...VALID [written to ./banking_system.mutant.71.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0 and True...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>  True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>   True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>    True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>     True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>      True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>       True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>        True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>         True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          iTrue and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          ifTrue and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if True and amount <= self.balance:...VALID [written to ./banking_system.mutant.72.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if aTrue and amount <= self.balance:...VALID [written to ./banking_system.mutant.73.py] 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amoTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amouTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amounTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amountTrue and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount >True and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > True and amount <= self.balance:...REDUNDANT 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          if amount > 0True and amount <= self.balance:...INVALID 
PROCESSING MUTANT: 24:         if amount > 0 and amount <= self.balance:  ==>          pass...INVALID 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance += amount...VALID [written to ./banking_system.mutant.74.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance *= amount...VALID [written to ./banking_system.mutant.75.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance /= amount...VALID [written to ./banking_system.mutant.76.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance %= amount...VALID [written to ./banking_system.mutant.77.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance =- amount...VALID [written to ./banking_system.mutant.78.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance = amount...VALID [written to ./banking_system.mutant.79.py] 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance -= amount
            break;...INVALID 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              self.balance -= amount
            continue;...INVALID 
PROCESSING MUTANT: 25:             self.balance -= amount  ==>              pass...VALID [written to ./banking_system.mutant.80.py] 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")
            break;...INVALID 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")
            continue;...INVALID 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              self.transaction_history.append(f"")...VALID [written to ./banking_system.mutant.81.py] 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              self.transaction_history.appbegin(f"Transfer to {recipient_account.owner}: -${amount:.2f}")...REDUNDANT 
PROCESSING MUTANT: 26:             self.transaction_history.append(f"Transfer to {recipient_account.owner}: -${amount:.2f}")  ==>              pass...VALID [written to ./banking_system.mutant.82.py] 
PROCESSING MUTANT: 27:             recipient_account.deposit(amount)  ==>              recipient_account.deposit(amount)
            break;...INVALID 
PROCESSING MUTANT: 27:             recipient_account.deposit(amount)  ==>              recipient_account.deposit(amount)
            continue;...INVALID 
PROCESSING MUTANT: 27:             recipient_account.deposit(amount)  ==>              pass...VALID [written to ./banking_system.mutant.83.py] 
PROCESSING MUTANT: 28:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 28:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 28:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print("Invalid transfer amount or insufficient funds.")
            break;...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print("Invalid transfer amount or insufficient funds.")
            continue;...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print("Invalid transfer amount or False...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>  False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>   False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>    False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>     False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>      False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>       False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>        False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>         False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>          False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>           False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>            False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>             False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              pFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              prFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              priFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              prinFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              printFalse or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              print(False or insufficient funds.")...INVALID 
PROCESSING MUTANT: 29:             print("Invalid transfer amount or insufficient funds.")  ==>              pass...VALID [written to ./banking_system.mutant.84.py] 
PROCESSING MUTANT: 31:     def get_balance(self):  ==>      def get_balance(self):
    break;...INVALID 
PROCESSING MUTANT: 31:     def get_balance(self):  ==>      def get_balance(self):
    continue;...INVALID 
PROCESSING MUTANT: 31:     def get_balance(self):  ==>      pass...INVALID 
PROCESSING MUTANT: 32:         return self.balance  ==>          return self.balance
        break;...INVALID 
PROCESSING MUTANT: 32:         return self.balance  ==>          return self.balance
        continue;...INVALID 
PROCESSING MUTANT: 32:         return self.balance  ==>          return None...VALID [written to ./banking_system.mutant.85.py] 
PROCESSING MUTANT: 32:         return self.balance  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 34:     def get_transaction_history(self):  ==>      def get_transaction_history(self):
    break;...INVALID 
PROCESSING MUTANT: 34:     def get_transaction_history(self):  ==>      def get_transaction_history(self):
    continue;...INVALID 
PROCESSING MUTANT: 34:     def get_transaction_history(self):  ==>      pass...INVALID 
PROCESSING MUTANT: 35:         return self.transaction_history  ==>          return self.transaction_history
        break;...INVALID 
PROCESSING MUTANT: 35:         return self.transaction_history  ==>          return self.transaction_history
        continue;...INVALID 
PROCESSING MUTANT: 35:         return self.transaction_history  ==>          return None...VALID [written to ./banking_system.mutant.86.py] 
PROCESSING MUTANT: 35:         return self.transaction_history  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 37:     def __str__(self):  ==>      def __str__(self):
    break;...INVALID 
PROCESSING MUTANT: 37:     def __str__(self):  ==>      def __str__(self):
    continue;...INVALID 
PROCESSING MUTANT: 37:     def __str__(self):  ==>      pass...INVALID 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"
        break;...INVALID 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"
        continue;...INVALID 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          return f""...VALID [written to ./banking_system.mutant.87.py] 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          return None...VALID [written to ./banking_system.mutant.88.py] 
PROCESSING MUTANT: 38:         return f"Account Number: {self.account_number}, Owner: {self.owner}, Balance: ${self.balance:.2f}"  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 40: class Bank:  ==>  class Bank:
break;...INVALID 
PROCESSING MUTANT: 40: class Bank:  ==>  class Bank:
continue;...INVALID 
PROCESSING MUTANT: 40: class Bank:  ==>  pass...INVALID 
PROCESSING MUTANT: 41:     def __init__(self):  ==>      def __init__(self):
    break;...INVALID 
PROCESSING MUTANT: 41:     def __init__(self):  ==>      def __init__(self):
    continue;...INVALID 
PROCESSING MUTANT: 41:     def __init__(self):  ==>      pass...INVALID 
PROCESSING MUTANT: 42:         self.accounts = {}  ==>          self.accounts = {}
        break;...INVALID 
PROCESSING MUTANT: 42:         self.accounts = {}  ==>          self.accounts = {}
        continue;...INVALID 
PROCESSING MUTANT: 42:         self.accounts = {}  ==>          pass...VALID [written to ./banking_system.mutant.89.py] 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account(self, account_number, owner):
    break;...INVALID 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account(self, account_number, owner):
    continue;...INVALID 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account ( account_number,self, owner):...VALID [written to ./banking_system.mutant.90.py] 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account(self , owner, account_number):...VALID [written to ./banking_system.mutant.91.py] 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      pass...INVALID 
PROCESSING MUTANT: 44:     def create_account(self, account_number, owner):  ==>      def create_account(self, owner):...VALID [written to ./banking_system.mutant.92.py] 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          if account_number not in self.accounts:
        break;...INVALID 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          if account_number not in self.accounts:
        continue;...INVALID 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          if not (account_number not in self.accounts):...VALID [written to ./banking_system.mutant.93.py] 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          if account_number  in self.accounts:...REDUNDANT 
PROCESSING MUTANT: 45:         if account_number not in self.accounts:  ==>          pass...INVALID 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[account_number] = BankAccount(account_number, owner)
            break;...INVALID 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[account_number] = BankAccount(account_number, owner)
            continue;...INVALID 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[account_number] = BankAccount ( owner,account_number)...VALID [written to ./banking_system.mutant.94.py] 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              pass...VALID [written to ./banking_system.mutant.95.py] 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[] = BankAccount(account_number, owner)...INVALID 
PROCESSING MUTANT: 46:             self.accounts[account_number] = BankAccount(account_number, owner)  ==>              self.accounts[ owner)...INVALID 
PROCESSING MUTANT: 47:             print("Account created successfully.")  ==>              print("Account created successfully.")
            break;...INVALID 
PROCESSING MUTANT: 47:             print("Account created successfully.")  ==>              print("Account created successfully.")
            continue;...INVALID 
PROCESSING MUTANT: 47:             print("Account created successfully.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 47:             print("Account created successfully.")  ==>              pass...VALID [written to ./banking_system.mutant.96.py] 
PROCESSING MUTANT: 48:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 48:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 48:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 49:             print("Account already exists.")  ==>              print("Account already exists.")
            break;...INVALID 
PROCESSING MUTANT: 49:             print("Account already exists.")  ==>              print("Account already exists.")
            continue;...INVALID 
PROCESSING MUTANT: 49:             print("Account already exists.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 49:             print("Account already exists.")  ==>              pass...VALID [written to ./banking_system.mutant.97.py] 
PROCESSING MUTANT: 51:     def get_account(self, account_number):  ==>      def get_account(self, account_number):
    break;...INVALID 
PROCESSING MUTANT: 51:     def get_account(self, account_number):  ==>      def get_account(self, account_number):
    continue;...INVALID 
PROCESSING MUTANT: 51:     def get_account(self, account_number):  ==>      def get_account ( account_number,self):...VALID [written to ./banking_system.mutant.98.py] 
PROCESSING MUTANT: 51:     def get_account(self, account_number):  ==>      pass...INVALID 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          return self.accounts.get(account_number, None)
        break;...INVALID 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          return self.accounts.get(account_number, None)
        continue;...INVALID 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          return self.accounts.get ( None,account_number)...VALID [written to ./banking_system.mutant.99.py] 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          return None...VALID [written to ./banking_system.mutant.100.py] 
PROCESSING MUTANT: 52:         return self.accounts.get(account_number, None)  ==>          pass...REDUNDANT 
PROCESSING MUTANT: 54:     def close_account(self, account_number):  ==>      def close_account(self, account_number):
    break;...INVALID 
PROCESSING MUTANT: 54:     def close_account(self, account_number):  ==>      def close_account(self, account_number):
    continue;...INVALID 
PROCESSING MUTANT: 54:     def close_account(self, account_number):  ==>      def close_account ( account_number,self):...VALID [written to ./banking_system.mutant.101.py] 
PROCESSING MUTANT: 54:     def close_account(self, account_number):  ==>      pass...INVALID 
PROCESSING MUTANT: 55:         if account_number in self.accounts:  ==>          if account_number in self.accounts:
        break;...INVALID 
PROCESSING MUTANT: 55:         if account_number in self.accounts:  ==>          if account_number in self.accounts:
        continue;...INVALID 
PROCESSING MUTANT: 55:         if account_number in self.accounts:  ==>          if not (account_number in self.accounts):...VALID [written to ./banking_system.mutant.102.py] 
PROCESSING MUTANT: 55:         if account_number in self.accounts:  ==>          pass...INVALID 
PROCESSING MUTANT: 56:             del self.accounts[account_number]  ==>              del self.accounts[account_number]
            break;...INVALID 
PROCESSING MUTANT: 56:             del self.accounts[account_number]  ==>              del self.accounts[account_number]
            continue;...INVALID 
PROCESSING MUTANT: 56:             del self.accounts[account_number]  ==>              pass...VALID [written to ./banking_system.mutant.103.py] 
PROCESSING MUTANT: 56:             del self.accounts[account_number]  ==>              del self.accounts[]...INVALID 
PROCESSING MUTANT: 57:             print("Account closed successfully.")  ==>              print("Account closed successfully.")
            break;...INVALID 
PROCESSING MUTANT: 57:             print("Account closed successfully.")  ==>              print("Account closed successfully.")
            continue;...INVALID 
PROCESSING MUTANT: 57:             print("Account closed successfully.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 57:             print("Account closed successfully.")  ==>              pass...VALID [written to ./banking_system.mutant.104.py] 
PROCESSING MUTANT: 58:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 58:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 58:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 59:             print("Account not found.")  ==>              print("Account not found.")
            break;...INVALID 
PROCESSING MUTANT: 59:             print("Account not found.")  ==>              print("Account not found.")
            continue;...INVALID 
PROCESSING MUTANT: 59:             print("Account not found.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 59:             print("Account not found.")  ==>              pass...VALID [written to ./banking_system.mutant.105.py] 
PROCESSING MUTANT: 61: def main():  ==>  def main():
break;...INVALID 
PROCESSING MUTANT: 61: def main():  ==>  def main():
continue;...INVALID 
PROCESSING MUTANT: 61: def main():  ==>  pass...INVALID 
PROCESSING MUTANT: 62:     bank = Bank()  ==>      bank = Bank()
    break;...INVALID 
PROCESSING MUTANT: 62:     bank = Bank()  ==>      bank = Bank()
    continue;...INVALID 
PROCESSING MUTANT: 62:     bank = Bank()  ==>      pass...VALID [written to ./banking_system.mutant.106.py] 
PROCESSING MUTANT: 64:     while True:  ==>      while True:
    break;...INVALID 
PROCESSING MUTANT: 64:     while True:  ==>      while True:
    continue;...INVALID 
PROCESSING MUTANT: 64:     while True:  ==>      if True:...INVALID 
PROCESSING MUTANT: 64:     while True:  ==>      while not (True):...VALID [written to ./banking_system.mutant.107.py] 
PROCESSING MUTANT: 64:     while True:  ==>      pass...INVALID 
PROCESSING MUTANT: 64:     while True:  ==>      while False:...REDUNDANT 
PROCESSING MUTANT: 65:         print("\nBanking System Menu")  ==>          print("\nBanking System Menu")
        break;...VALID [written to ./banking_system.mutant.108.py] 
PROCESSING MUTANT: 65:         print("\nBanking System Menu")  ==>          print("\nBanking System Menu")
        continue;...VALID [written to ./banking_system.mutant.109.py] 
PROCESSING MUTANT: 65:         print("\nBanking System Menu")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 65:         print("\nBanking System Menu")  ==>          pass...VALID [written to ./banking_system.mutant.110.py] 
PROCESSING MUTANT: 66:         print("1. Create Account")  ==>          print("1. Create Account")
        break;...VALID [written to ./banking_system.mutant.111.py] 
PROCESSING MUTANT: 66:         print("1. Create Account")  ==>          print("1. Create Account")
        continue;...VALID [written to ./banking_system.mutant.112.py] 
PROCESSING MUTANT: 66:         print("1. Create Account")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 66:         print("1. Create Account")  ==>          pass...VALID [written to ./banking_system.mutant.113.py] 
PROCESSING MUTANT: 67:         print("2. Deposit Money")  ==>          print("2. Deposit Money")
        break;...VALID [written to ./banking_system.mutant.114.py] 
PROCESSING MUTANT: 67:         print("2. Deposit Money")  ==>          print("2. Deposit Money")
        continue;...VALID [written to ./banking_system.mutant.115.py] 
PROCESSING MUTANT: 67:         print("2. Deposit Money")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 67:         print("2. Deposit Money")  ==>          pass...VALID [written to ./banking_system.mutant.116.py] 
PROCESSING MUTANT: 68:         print("3. Withdraw Money")  ==>          print("3. Withdraw Money")
        break;...VALID [written to ./banking_system.mutant.117.py] 
PROCESSING MUTANT: 68:         print("3. Withdraw Money")  ==>          print("3. Withdraw Money")
        continue;...VALID [written to ./banking_system.mutant.118.py] 
PROCESSING MUTANT: 68:         print("3. Withdraw Money")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 68:         print("3. Withdraw Money")  ==>          pass...VALID [written to ./banking_system.mutant.119.py] 
PROCESSING MUTANT: 69:         print("4. Transfer Money")  ==>          print("4. Transfer Money")
        break;...VALID [written to ./banking_system.mutant.120.py] 
PROCESSING MUTANT: 69:         print("4. Transfer Money")  ==>          print("4. Transfer Money")
        continue;...VALID [written to ./banking_system.mutant.121.py] 
PROCESSING MUTANT: 69:         print("4. Transfer Money")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 69:         print("4. Transfer Money")  ==>          pass...VALID [written to ./banking_system.mutant.122.py] 
PROCESSING MUTANT: 70:         print("5. Show Account Details")  ==>          print("5. Show Account Details")
        break;...VALID [written to ./banking_system.mutant.123.py] 
PROCESSING MUTANT: 70:         print("5. Show Account Details")  ==>          print("5. Show Account Details")
        continue;...VALID [written to ./banking_system.mutant.124.py] 
PROCESSING MUTANT: 70:         print("5. Show Account Details")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 70:         print("5. Show Account Details")  ==>          pass...VALID [written to ./banking_system.mutant.125.py] 
PROCESSING MUTANT: 71:         print("6. Show Transaction History")  ==>          print("6. Show Transaction History")
        break;...VALID [written to ./banking_system.mutant.126.py] 
PROCESSING MUTANT: 71:         print("6. Show Transaction History")  ==>          print("6. Show Transaction History")
        continue;...VALID [written to ./banking_system.mutant.127.py] 
PROCESSING MUTANT: 71:         print("6. Show Transaction History")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 71:         print("6. Show Transaction History")  ==>          pass...VALID [written to ./banking_system.mutant.128.py] 
PROCESSING MUTANT: 72:         print("7. Close Account")  ==>          print("7. Close Account")
        break;...VALID [written to ./banking_system.mutant.129.py] 
PROCESSING MUTANT: 72:         print("7. Close Account")  ==>          print("7. Close Account")
        continue;...VALID [written to ./banking_system.mutant.130.py] 
PROCESSING MUTANT: 72:         print("7. Close Account")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 72:         print("7. Close Account")  ==>          pass...VALID [written to ./banking_system.mutant.131.py] 
PROCESSING MUTANT: 73:         print("8. Exit")  ==>          print("8. Exit")
        break;...VALID [written to ./banking_system.mutant.132.py] 
PROCESSING MUTANT: 73:         print("8. Exit")  ==>          print("8. Exit")
        continue;...VALID [written to ./banking_system.mutant.133.py] 
PROCESSING MUTANT: 73:         print("8. Exit")  ==>          print("")...REDUNDANT 
PROCESSING MUTANT: 73:         print("8. Exit")  ==>          pass...VALID [written to ./banking_system.mutant.134.py] 
PROCESSING MUTANT: 74:         choice = input("Enter choice: ")  ==>          choice = input("Enter choice: ")
        break;...VALID [written to ./banking_system.mutant.135.py] 
PROCESSING MUTANT: 74:         choice = input("Enter choice: ")  ==>          choice = input("Enter choice: ")
        continue;...VALID [written to ./banking_system.mutant.136.py] 
PROCESSING MUTANT: 74:         choice = input("Enter choice: ")  ==>          choice = input("")...REDUNDANT 
PROCESSING MUTANT: 74:         choice = input("Enter choice: ")  ==>          pass...VALID [written to ./banking_system.mutant.137.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice != '1':...VALID [written to ./banking_system.mutant.138.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice <= '1':...VALID [written to ./banking_system.mutant.139.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice >= '1':...VALID [written to ./banking_system.mutant.140.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice > '1':...VALID [written to ./banking_system.mutant.141.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice < '1':...VALID [written to ./banking_system.mutant.142.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '0':...REDUNDANT 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '(1+1)':...REDUNDANT 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '(1-1)':...REDUNDANT 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '1':
        break;...INVALID 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '1':
        continue;...INVALID 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if not (choice == '1'):...VALID [written to ./banking_system.mutant.143.py] 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          pass...INVALID 
PROCESSING MUTANT: 76:         if choice == '1':  ==>          if choice == '':...REDUNDANT 
PROCESSING MUTANT: 77:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.144.py] 
PROCESSING MUTANT: 77:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.145.py] 
PROCESSING MUTANT: 77:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.146.py] 
PROCESSING MUTANT: 77:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.147.py] 
PROCESSING MUTANT: 78:             owner = input("Enter account owner's name: ")  ==>              owner = input("Enter account owner's name: ")
            break;...VALID [written to ./banking_system.mutant.148.py] 
PROCESSING MUTANT: 78:             owner = input("Enter account owner's name: ")  ==>              owner = input("Enter account owner's name: ")
            continue;...VALID [written to ./banking_system.mutant.149.py] 
PROCESSING MUTANT: 78:             owner = input("Enter account owner's name: ")  ==>              owner = input("")...REDUNDANT 
PROCESSING MUTANT: 78:             owner = input("Enter account owner's name: ")  ==>              pass...VALID [written to ./banking_system.mutant.150.py] 
PROCESSING MUTANT: 79:             bank.create_account(account_number, owner)  ==>              bank.create_account(account_number, owner)
            break;...VALID [written to ./banking_system.mutant.151.py] 
PROCESSING MUTANT: 79:             bank.create_account(account_number, owner)  ==>              bank.create_account(account_number, owner)
            continue;...VALID [written to ./banking_system.mutant.152.py] 
PROCESSING MUTANT: 79:             bank.create_account(account_number, owner)  ==>              bank.create_account ( owner,account_number)...VALID [written to ./banking_system.mutant.153.py] 
PROCESSING MUTANT: 79:             bank.create_account(account_number, owner)  ==>              pass...VALID [written to ./banking_system.mutant.154.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice != '2':...VALID [written to ./banking_system.mutant.155.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice <= '2':...VALID [written to ./banking_system.mutant.156.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice >= '2':...VALID [written to ./banking_system.mutant.157.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice > '2':...VALID [written to ./banking_system.mutant.158.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice < '2':...VALID [written to ./banking_system.mutant.159.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.160.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '(2+1)':...REDUNDANT 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '(2-1)':...REDUNDANT 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '2':
        break;...INVALID 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '2':
        continue;...INVALID 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif not (choice == '2'):...VALID [written to ./banking_system.mutant.161.py] 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          pass...INVALID 
PROCESSING MUTANT: 80:         elif choice == '2':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 81:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.162.py] 
PROCESSING MUTANT: 81:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.163.py] 
PROCESSING MUTANT: 81:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.164.py] 
PROCESSING MUTANT: 81:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.165.py] 
PROCESSING MUTANT: 82:             amount = float(input("Enter amount to deposit: "))    ==>              amount = float(input("Enter amount to deposit: "))  
            break;...VALID [written to ./banking_system.mutant.166.py] 
PROCESSING MUTANT: 82:             amount = float(input("Enter amount to deposit: "))    ==>              amount = float(input("Enter amount to deposit: "))  
            continue;...VALID [written to ./banking_system.mutant.167.py] 
PROCESSING MUTANT: 82:             amount = float(input("Enter amount to deposit: "))    ==>              amount = float(input(""))  ...REDUNDANT 
PROCESSING MUTANT: 82:             amount = float(input("Enter amount to deposit: "))    ==>              pass...VALID [written to ./banking_system.mutant.168.py] 
PROCESSING MUTANT: 83:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            break;...VALID [written to ./banking_system.mutant.169.py] 
PROCESSING MUTANT: 83:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.170.py] 
PROCESSING MUTANT: 83:             account = bank.get_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.171.py] 
PROCESSING MUTANT: 84:             if account:  ==>              if account:
            break;...INVALID 
PROCESSING MUTANT: 84:             if account:  ==>              if account:
            continue;...INVALID 
PROCESSING MUTANT: 84:             if account:  ==>              if not (account):...VALID [written to ./banking_system.mutant.172.py] 
PROCESSING MUTANT: 84:             if account:  ==>              pass...INVALID 
PROCESSING MUTANT: 85:                 account.deposit(amount)  ==>                  account.deposit(amount)
                break;...VALID [written to ./banking_system.mutant.173.py] 
PROCESSING MUTANT: 85:                 account.deposit(amount)  ==>                  account.deposit(amount)
                continue;...VALID [written to ./banking_system.mutant.174.py] 
PROCESSING MUTANT: 85:                 account.deposit(amount)  ==>                  pass...VALID [written to ./banking_system.mutant.175.py] 
PROCESSING MUTANT: 86:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 86:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 86:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 87:                 print("Account not found.")  ==>                  print("Account not found.")
                break;...VALID [written to ./banking_system.mutant.176.py] 
PROCESSING MUTANT: 87:                 print("Account not found.")  ==>                  print("Account not found.")
                continue;...VALID [written to ./banking_system.mutant.177.py] 
PROCESSING MUTANT: 87:                 print("Account not found.")  ==>                  print("")...VALID [written to ./banking_system.mutant.178.py] 
PROCESSING MUTANT: 87:                 print("Account not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.179.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice != '3':...VALID [written to ./banking_system.mutant.180.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice <= '3':...VALID [written to ./banking_system.mutant.181.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice >= '3':...VALID [written to ./banking_system.mutant.182.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice > '3':...VALID [written to ./banking_system.mutant.183.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice < '3':...VALID [written to ./banking_system.mutant.184.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.185.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '(3+1)':...REDUNDANT 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '(3-1)':...REDUNDANT 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '3':
        break;...INVALID 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '3':
        continue;...INVALID 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif not (choice == '3'):...VALID [written to ./banking_system.mutant.186.py] 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          pass...INVALID 
PROCESSING MUTANT: 88:         elif choice == '3':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 89:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.187.py] 
PROCESSING MUTANT: 89:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.188.py] 
PROCESSING MUTANT: 89:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.189.py] 
PROCESSING MUTANT: 89:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.190.py] 
PROCESSING MUTANT: 90:             amount = float(input("Enter amount to withdraw: "))    ==>              amount = float(input("Enter amount to withdraw: "))  
            break;...VALID [written to ./banking_system.mutant.191.py] 
PROCESSING MUTANT: 90:             amount = float(input("Enter amount to withdraw: "))    ==>              amount = float(input("Enter amount to withdraw: "))  
            continue;...VALID [written to ./banking_system.mutant.192.py] 
PROCESSING MUTANT: 90:             amount = float(input("Enter amount to withdraw: "))    ==>              amount = float(input(""))  ...REDUNDANT 
PROCESSING MUTANT: 90:             amount = float(input("Enter amount to withdraw: "))    ==>              pass...VALID [written to ./banking_system.mutant.193.py] 
PROCESSING MUTANT: 91:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            break;...VALID [written to ./banking_system.mutant.194.py] 
PROCESSING MUTANT: 91:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.195.py] 
PROCESSING MUTANT: 91:             account = bank.get_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.196.py] 
PROCESSING MUTANT: 92:             if account:  ==>              if account:
            break;...INVALID 
PROCESSING MUTANT: 92:             if account:  ==>              if account:
            continue;...INVALID 
PROCESSING MUTANT: 92:             if account:  ==>              if not (account):...VALID [written to ./banking_system.mutant.197.py] 
PROCESSING MUTANT: 92:             if account:  ==>              pass...INVALID 
PROCESSING MUTANT: 93:                 account.withdraw(amount)  ==>                  account.withdraw(amount)
                break;...VALID [written to ./banking_system.mutant.198.py] 
PROCESSING MUTANT: 93:                 account.withdraw(amount)  ==>                  account.withdraw(amount)
                continue;...VALID [written to ./banking_system.mutant.199.py] 
PROCESSING MUTANT: 93:                 account.withdraw(amount)  ==>                  pass...VALID [written to ./banking_system.mutant.200.py] 
PROCESSING MUTANT: 94:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 94:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 94:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 95:                 print("Account not found.")  ==>                  print("Account not found.")
                break;...VALID [written to ./banking_system.mutant.201.py] 
PROCESSING MUTANT: 95:                 print("Account not found.")  ==>                  print("Account not found.")
                continue;...VALID [written to ./banking_system.mutant.202.py] 
PROCESSING MUTANT: 95:                 print("Account not found.")  ==>                  print("")...VALID [written to ./banking_system.mutant.203.py] 
PROCESSING MUTANT: 95:                 print("Account not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.204.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice != '4':...VALID [written to ./banking_system.mutant.205.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice <= '4':...VALID [written to ./banking_system.mutant.206.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice >= '4':...VALID [written to ./banking_system.mutant.207.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice > '4':...VALID [written to ./banking_system.mutant.208.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice < '4':...VALID [written to ./banking_system.mutant.209.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.210.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '(4+1)':...REDUNDANT 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '(4-1)':...REDUNDANT 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '4':
        break;...INVALID 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '4':
        continue;...INVALID 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif not (choice == '4'):...VALID [written to ./banking_system.mutant.211.py] 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          pass...INVALID 
PROCESSING MUTANT: 96:         elif choice == '4':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 97:             source_account_number = input("Enter source account number: ")  ==>              source_account_number = input("Enter source account number: ")
            break;...VALID [written to ./banking_system.mutant.212.py] 
PROCESSING MUTANT: 97:             source_account_number = input("Enter source account number: ")  ==>              source_account_number = input("Enter source account number: ")
            continue;...VALID [written to ./banking_system.mutant.213.py] 
PROCESSING MUTANT: 97:             source_account_number = input("Enter source account number: ")  ==>              source_account_number = input("")...REDUNDANT 
PROCESSING MUTANT: 97:             source_account_number = input("Enter source account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.214.py] 
PROCESSING MUTANT: 98:             target_account_number = input("Enter target account number: ")  ==>              target_account_number = input("Enter target account number: ")
            break;...VALID [written to ./banking_system.mutant.215.py] 
PROCESSING MUTANT: 98:             target_account_number = input("Enter target account number: ")  ==>              target_account_number = input("Enter target account number: ")
            continue;...VALID [written to ./banking_system.mutant.216.py] 
PROCESSING MUTANT: 98:             target_account_number = input("Enter target account number: ")  ==>              target_account_number = input("")...REDUNDANT 
PROCESSING MUTANT: 98:             target_account_number = input("Enter target account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.217.py] 
PROCESSING MUTANT: 99:             amount = float(input("Enter amount to transfer: "))    ==>              amount = float(input("Enter amount to transfer: "))  
            break;...VALID [written to ./banking_system.mutant.218.py] 
PROCESSING MUTANT: 99:             amount = float(input("Enter amount to transfer: "))    ==>              amount = float(input("Enter amount to transfer: "))  
            continue;...VALID [written to ./banking_system.mutant.219.py] 
PROCESSING MUTANT: 99:             amount = float(input("Enter amount to transfer: "))    ==>              amount = float(input(""))  ...REDUNDANT 
PROCESSING MUTANT: 99:             amount = float(input("Enter amount to transfer: "))    ==>              pass...VALID [written to ./banking_system.mutant.220.py] 
PROCESSING MUTANT: 100:             source_account = bank.get_account(source_account_number)  ==>              source_account = bank.get_account(source_account_number)
            break;...VALID [written to ./banking_system.mutant.221.py] 
PROCESSING MUTANT: 100:             source_account = bank.get_account(source_account_number)  ==>              source_account = bank.get_account(source_account_number)
            continue;...VALID [written to ./banking_system.mutant.222.py] 
PROCESSING MUTANT: 100:             source_account = bank.get_account(source_account_number)  ==>              pass...VALID [written to ./banking_system.mutant.223.py] 
PROCESSING MUTANT: 101:             target_account = bank.get_account(target_account_number)  ==>              target_account = bank.get_account(target_account_number)
            break;...VALID [written to ./banking_system.mutant.224.py] 
PROCESSING MUTANT: 101:             target_account = bank.get_account(target_account_number)  ==>              target_account = bank.get_account(target_account_number)
            continue;...VALID [written to ./banking_system.mutant.225.py] 
PROCESSING MUTANT: 101:             target_account = bank.get_account(target_account_number)  ==>              pass...VALID [written to ./banking_system.mutant.226.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_account and target_account:
            break;...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_account and target_account:
            continue;...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if not (source_account and target_account):...VALID [written to ./banking_system.mutant.227.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_account  or target_account:...VALID [written to ./banking_system.mutant.228.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_account and True...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>  True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>   True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>    True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>     True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>      True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>       True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>        True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>         True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>          True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>           True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>            True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>             True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              True and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              iTrue and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              ifTrue and target_account:...INVALID 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if True and target_account:...VALID [written to ./banking_system.mutant.229.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if sTrue and target_account:...VALID [written to ./banking_system.mutant.230.py] 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if soTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if souTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if sourTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if sourcTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if sourceTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_True and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_aTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_acTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accoTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accouTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accounTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              if source_accountTrue and target_account:...REDUNDANT 
PROCESSING MUTANT: 102:             if source_account and target_account:  ==>              pass...INVALID 
PROCESSING MUTANT: 103:                 source_account.transfer(amount, target_account)  ==>                  source_account.transfer(amount, target_account)
                break;...VALID [written to ./banking_system.mutant.231.py] 
PROCESSING MUTANT: 103:                 source_account.transfer(amount, target_account)  ==>                  source_account.transfer(amount, target_account)
                continue;...VALID [written to ./banking_system.mutant.232.py] 
PROCESSING MUTANT: 103:                 source_account.transfer(amount, target_account)  ==>                  source_account.transfer ( target_account,amount)...VALID [written to ./banking_system.mutant.233.py] 
PROCESSING MUTANT: 103:                 source_account.transfer(amount, target_account)  ==>                  pass...VALID [written to ./banking_system.mutant.234.py] 
PROCESSING MUTANT: 104:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 104:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 104:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print("One or more accounts not found.")
                break;...VALID [written to ./banking_system.mutant.235.py] 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print("One or more accounts not found.")
                continue;...VALID [written to ./banking_system.mutant.236.py] 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print("")...REDUNDANT 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print("One or False...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>  False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>   False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>    False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>     False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>      False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>       False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>        False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>         False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>          False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>           False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>            False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>             False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>              False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>               False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                 False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  pFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  prFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  priFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  prinFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  printFalse or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  print(False or more accounts not found.")...INVALID 
PROCESSING MUTANT: 105:                 print("One or more accounts not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.237.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice != '5':...VALID [written to ./banking_system.mutant.238.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice <= '5':...VALID [written to ./banking_system.mutant.239.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice >= '5':...VALID [written to ./banking_system.mutant.240.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice > '5':...VALID [written to ./banking_system.mutant.241.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice < '5':...VALID [written to ./banking_system.mutant.242.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.243.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '(5+1)':...REDUNDANT 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '(5-1)':...REDUNDANT 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '5':
        break;...INVALID 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '5':
        continue;...INVALID 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif not (choice == '5'):...VALID [written to ./banking_system.mutant.244.py] 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          pass...INVALID 
PROCESSING MUTANT: 106:         elif choice == '5':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 107:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.245.py] 
PROCESSING MUTANT: 107:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.246.py] 
PROCESSING MUTANT: 107:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.247.py] 
PROCESSING MUTANT: 107:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.248.py] 
PROCESSING MUTANT: 108:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            break;...VALID [written to ./banking_system.mutant.249.py] 
PROCESSING MUTANT: 108:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.250.py] 
PROCESSING MUTANT: 108:             account = bank.get_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.251.py] 
PROCESSING MUTANT: 109:             if account:  ==>              if account:
            break;...INVALID 
PROCESSING MUTANT: 109:             if account:  ==>              if account:
            continue;...INVALID 
PROCESSING MUTANT: 109:             if account:  ==>              if not (account):...VALID [written to ./banking_system.mutant.252.py] 
PROCESSING MUTANT: 109:             if account:  ==>              pass...INVALID 
PROCESSING MUTANT: 110:                 print(account)  ==>                  print(account)
                break;...VALID [written to ./banking_system.mutant.253.py] 
PROCESSING MUTANT: 110:                 print(account)  ==>                  print(account)
                continue;...VALID [written to ./banking_system.mutant.254.py] 
PROCESSING MUTANT: 110:                 print(account)  ==>                  pass...VALID [written to ./banking_system.mutant.255.py] 
PROCESSING MUTANT: 111:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 111:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 111:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 112:                 print("Account not found.")  ==>                  print("Account not found.")
                break;...VALID [written to ./banking_system.mutant.256.py] 
PROCESSING MUTANT: 112:                 print("Account not found.")  ==>                  print("Account not found.")
                continue;...VALID [written to ./banking_system.mutant.257.py] 
PROCESSING MUTANT: 112:                 print("Account not found.")  ==>                  print("")...VALID [written to ./banking_system.mutant.258.py] 
PROCESSING MUTANT: 112:                 print("Account not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.259.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice != '6':...VALID [written to ./banking_system.mutant.260.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice <= '6':...VALID [written to ./banking_system.mutant.261.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice >= '6':...VALID [written to ./banking_system.mutant.262.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice > '6':...VALID [written to ./banking_system.mutant.263.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice < '6':...VALID [written to ./banking_system.mutant.264.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.265.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '(6+1)':...REDUNDANT 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '(6-1)':...REDUNDANT 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '6':
        break;...INVALID 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '6':
        continue;...INVALID 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif not (choice == '6'):...VALID [written to ./banking_system.mutant.266.py] 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          pass...INVALID 
PROCESSING MUTANT: 113:         elif choice == '6':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 114:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.267.py] 
PROCESSING MUTANT: 114:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.268.py] 
PROCESSING MUTANT: 114:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.269.py] 
PROCESSING MUTANT: 114:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.270.py] 
PROCESSING MUTANT: 115:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            break;...VALID [written to ./banking_system.mutant.271.py] 
PROCESSING MUTANT: 115:             account = bank.get_account(account_number)  ==>              account = bank.get_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.272.py] 
PROCESSING MUTANT: 115:             account = bank.get_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.273.py] 
PROCESSING MUTANT: 116:             if account:  ==>              if account:
            break;...INVALID 
PROCESSING MUTANT: 116:             if account:  ==>              if account:
            continue;...INVALID 
PROCESSING MUTANT: 116:             if account:  ==>              if not (account):...VALID [written to ./banking_system.mutant.274.py] 
PROCESSING MUTANT: 116:             if account:  ==>              pass...INVALID 
PROCESSING MUTANT: 117:                 print("Transaction History:")  ==>                  print("Transaction History:")
                break;...VALID [written to ./banking_system.mutant.275.py] 
PROCESSING MUTANT: 117:                 print("Transaction History:")  ==>                  print("Transaction History:")
                continue;...VALID [written to ./banking_system.mutant.276.py] 
PROCESSING MUTANT: 117:                 print("Transaction History:")  ==>                  print("")...REDUNDANT 
PROCESSING MUTANT: 117:                 print("Transaction History:")  ==>                  pass...VALID [written to ./banking_system.mutant.277.py] 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  for transaction in account.get_transaction_history():
                break;...INVALID 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  for transaction in account.get_transaction_history():
                continue;...INVALID 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  f andtransaction in account.get_transaction_history():...INVALID 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  for False...INVALID 
PROCESSING MUTANT: 118:                 for transaction in account.get_transaction_history():  ==>                  pass...INVALID 
PROCESSING MUTANT: 119:                     print(transaction)  ==>                      print(transaction)
                    break;...VALID [written to ./banking_system.mutant.278.py] 
PROCESSING MUTANT: 119:                     print(transaction)  ==>                      print(transaction)
                    continue;...REDUNDANT 
PROCESSING MUTANT: 119:                     print(transaction)  ==>                      pass...VALID [written to ./banking_system.mutant.279.py] 
PROCESSING MUTANT: 120:             else:  ==>              else:
            break;...INVALID 
PROCESSING MUTANT: 120:             else:  ==>              else:
            continue;...INVALID 
PROCESSING MUTANT: 120:             else:  ==>              pass...INVALID 
PROCESSING MUTANT: 121:                 print("Account not found.")  ==>                  print("Account not found.")
                break;...VALID [written to ./banking_system.mutant.280.py] 
PROCESSING MUTANT: 121:                 print("Account not found.")  ==>                  print("Account not found.")
                continue;...VALID [written to ./banking_system.mutant.281.py] 
PROCESSING MUTANT: 121:                 print("Account not found.")  ==>                  print("")...VALID [written to ./banking_system.mutant.282.py] 
PROCESSING MUTANT: 121:                 print("Account not found.")  ==>                  pass...VALID [written to ./banking_system.mutant.283.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice != '7':...VALID [written to ./banking_system.mutant.284.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice <= '7':...VALID [written to ./banking_system.mutant.285.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice >= '7':...VALID [written to ./banking_system.mutant.286.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice > '7':...VALID [written to ./banking_system.mutant.287.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice < '7':...VALID [written to ./banking_system.mutant.288.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.289.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '(7+1)':...REDUNDANT 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '(7-1)':...REDUNDANT 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '7':
        break;...INVALID 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '7':
        continue;...INVALID 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif not (choice == '7'):...VALID [written to ./banking_system.mutant.290.py] 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          pass...INVALID 
PROCESSING MUTANT: 122:         elif choice == '7':  ==>          elif choice == '':...REDUNDANT 
PROCESSING MUTANT: 123:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            break;...VALID [written to ./banking_system.mutant.291.py] 
PROCESSING MUTANT: 123:             account_number = input("Enter account number: ")  ==>              account_number = input("Enter account number: ")
            continue;...VALID [written to ./banking_system.mutant.292.py] 
PROCESSING MUTANT: 123:             account_number = input("Enter account number: ")  ==>              account_number = input("")...VALID [written to ./banking_system.mutant.293.py] 
PROCESSING MUTANT: 123:             account_number = input("Enter account number: ")  ==>              pass...VALID [written to ./banking_system.mutant.294.py] 
PROCESSING MUTANT: 124:             bank.close_account(account_number)  ==>              bank.close_account(account_number)
            break;...VALID [written to ./banking_system.mutant.295.py] 
PROCESSING MUTANT: 124:             bank.close_account(account_number)  ==>              bank.close_account(account_number)
            continue;...VALID [written to ./banking_system.mutant.296.py] 
PROCESSING MUTANT: 124:             bank.close_account(account_number)  ==>              pass...VALID [written to ./banking_system.mutant.297.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice != '8':...VALID [written to ./banking_system.mutant.298.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice <= '8':...VALID [written to ./banking_system.mutant.299.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice >= '8':...VALID [written to ./banking_system.mutant.300.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice > '8':...VALID [written to ./banking_system.mutant.301.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice < '8':...VALID [written to ./banking_system.mutant.302.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '0':...REDUNDANT 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '1':...VALID [written to ./banking_system.mutant.303.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '-1':...REDUNDANT 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '(8+1)':...REDUNDANT 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '(8-1)':...REDUNDANT 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '8':
        break;...INVALID 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '8':
        continue;...INVALID 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif not (choice == '8'):...VALID [written to ./banking_system.mutant.304.py] 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          pass...INVALID 
PROCESSING MUTANT: 125:         elif choice == '8':  ==>          elif choice == '':...REDUNDANT 
LINE 126:             break APPEARS TO BE COMMENT OR DEAD CODE, SKIPPING...
PROCESSING MUTANT: 127:         else:  ==>          else:
        break;...INVALID 
PROCESSING MUTANT: 127:         else:  ==>          else:
        continue;...INVALID 
PROCESSING MUTANT: 127:         else:  ==>          pass...INVALID 
PROCESSING MUTANT: 128:             print("Invalid choice. Please select a valid option.")  ==>              print("Invalid choice. Please select a valid option.")
            break;...VALID [written to ./banking_system.mutant.305.py] 
PROCESSING MUTANT: 128:             print("Invalid choice. Please select a valid option.")  ==>              print("Invalid choice. Please select a valid option.")
            continue;...VALID [written to ./banking_system.mutant.306.py] 
PROCESSING MUTANT: 128:             print("Invalid choice. Please select a valid option.")  ==>              print("")...REDUNDANT 
PROCESSING MUTANT: 128:             print("Invalid choice. Please select a valid option.")  ==>              pass...VALID [written to ./banking_system.mutant.307.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ != '__main__':...VALID [written to ./banking_system.mutant.308.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ <= '__main__':...VALID [written to ./banking_system.mutant.309.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ >= '__main__':...VALID [written to ./banking_system.mutant.310.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ > '__main__':...VALID [written to ./banking_system.mutant.311.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ < '__main__':...VALID [written to ./banking_system.mutant.312.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ == '__main__':
break;...INVALID 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ == '__main__':
continue;...INVALID 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if not (__name__ == '__main__'):...VALID [written to ./banking_system.mutant.313.py] 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  pass...INVALID 
PROCESSING MUTANT: 130: if __name__ == '__main__':  ==>  if __name__ == '':...REDUNDANT 
PROCESSING MUTANT: 131:     main()  ==>      main()
    break;...INVALID 
PROCESSING MUTANT: 131:     main()  ==>      main()
    continue;...INVALID 
PROCESSING MUTANT: 131:     main()  ==>      pass...VALID [written to ./banking_system.mutant.314.py] 
315 VALID MUTANTS
314 INVALID MUTANTS
112 REDUNDANT MUTANTS
Valid Percentage: 42.51012145748988%
Mutants have been moved to the 'mutations' directory.
likhitharoyal@Likhithas-MBP project_cs567 % nano organize_mutants.py          

likhitharoyal@Likhithas-MBP project_cs567 % nano organize_mutants.py

likhitharoyal@Likhithas-MBP project_cs567 % nano organize_mutants.py

likhitharoyal@Likhithas-MBP project_cs567 % touch organize_mutants.py

likhitharoyal@Likhithas-MBP project_cs567 % nano organize_mutants.py

likhitharoyal@Likhithas-MBP project_cs567 % 
likhitharoyal@Likhithas-MBP project_cs567 % nano organize_mutants.py

likhitharoyal@Likhithas-MBP project_cs567 % nano organize_mutants.py

likhitharoyal@Likhithas-MBP project_cs567 % tstl banking_system.tstl
Generating harness core using config=Config(tstl='banking_system.tstl', version=False, output='sut.py', classname='sut', noCover=False, coverReload=False, coverInit=False, enumerateEnabled=False, defaultReplay=False, forceRefExceptionMatch=False, forceStrongRefExceptionMatch=False, checkFailureDeterminism=False, ignoreAngles=False, stats=False, pylib=False, noReload=False, debug=False)
likhitharoyal@Likhithas-MBP project_cs567 % tstl_rt --timeout 30 --progress

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/tstl_rt", line 5, in <module>
    from tstl.randomtester import main
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/tstl/randomtester.py", line 21, in <module>
    import sut as SUT
  File "/Users/likhitharoyal/Desktop/project_cs567/sut.py", line 68
    ACTION new_bank = "bank = banking_system.Bank()"
           ^^^^^^^^
SyntaxError: invalid syntax
likhitharoyal@Likhithas-MBP project_cs567 % tstl banking_system.tstl       
Generating harness core using config=Config(tstl='banking_system.tstl', version=False, output='sut.py', classname='sut', noCover=False, coverReload=False, coverInit=False, enumerateEnabled=False, defaultReplay=False, forceRefExceptionMatch=False, forceStrongRefExceptionMatch=False, checkFailureDeterminism=False, ignoreAngles=False, stats=False, pylib=False, noReload=False, debug=False)
likhitharoyal@Likhithas-MBP project_cs567 % tstl_rt --timeout 30 --progress

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/tstl_rt", line 5, in <module>
    from tstl.randomtester import main
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/tstl/randomtester.py", line 21, in <module>
    import sut as SUT
  File "/Users/likhitharoyal/Desktop/project_cs567/sut.py", line 68
    ACTION new_bank = "bank = banking_system.Bank()"
           ^^^^^^^^
SyntaxError: invalid syntax
likhitharoyal@Likhithas-MBP project_cs567 % tstl_rt --timeout 30 --progress

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.13/bin/tstl_rt", line 5, in <module>
    from tstl.randomtester import main
  File "/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/tstl/randomtester.py", line 21, in <module>
    import sut as SUT
  File "/Users/likhitharoyal/Desktop/project_cs567/sut.py", line 1771
    '''
    ^
SyntaxError: unterminated triple-quoted string literal (detected at line 3909)
likhitharoyal@Likhithas-MBP project_cs567 % docker build -t friendly_feynman
 .

ERROR: "docker buildx build" requires exactly 1 argument.
See 'docker buildx build --help'.

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build
.: not enough arguments
likhitharoyal@Likhithas-MBP project_cs567 % docker build -t friendly_feynman
 .
ERROR: "docker buildx build" requires exactly 1 argument.
See 'docker buildx build --help'.

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build
.: not enough arguments
likhitharoyal@Likhithas-MBP project_cs567 % docker build -t friendly_feynman
 jeev
ERROR: "docker buildx build" requires exactly 1 argument.
See 'docker buildx build --help'.

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build
zsh: command not found: jeev
likhitharoyal@Likhithas-MBP project_cs567 % docker build -t friendly_feynman
 jeev
ERROR: "docker buildx build" requires exactly 1 argument.
See 'docker buildx build --help'.

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build
zsh: command not found: jeev
likhitharoyal@Likhithas-MBP project_cs567 % docker ps
CONTAINER ID   IMAGE                  COMMAND                  CREATED       STATUS       PORTS      NAMES
9d42666a9da1   adoring_visvesvaraya   "bash"                   2 hours ago   Up 2 hours              jolly_bhabha
bdf16b086895   likh:latest            "docker-entrypoint.s…"   2 hours ago   Up 2 hours   3000/tcp   adoring_visvesvaraya
ef70f3c276e8   likh:latest            "docker-entrypoint.s…"   2 hours ago   Up 2 hours   3000/tcp   hungry_khorana
de47bb586aaf   likh                   "docker-entrypoint.s…"   5 hours ago   Up 5 hours   3000/tcp   nostalgic_nightingale
257e12b214f5   lk:latest              "docker-entrypoint.s…"   5 hours ago   Up 5 hours   3000/tcp   boring_taussig
likhitharoyal@Likhithas-MBP project_cs567 % docker commit friendly_feynman jj
sha256:9e3af2f3c28b5ef677ed2da097d33f9ffc63891dc00771e75ecfa412c1b54378
likhitharoyal@Likhithas-MBP project_cs567 % docker commit -a "Likhitha Royal" -m "Added new configurations" abc123 my_ubuntu_custom:v1

Error response from daemon: No such container: abc123
likhitharoyal@Likhithas-MBP project_cs567 % docker images
REPOSITORY                 TAG       IMAGE ID       CREATED          SIZE
jj                         latest    9e3af2f3c28b   39 seconds ago   20.7kB
adoring_visvesvaraya       latest    def469086d23   2 hours ago      307MB
lj                         latest    5f49168e278c   2 hours ago      380MB
banking-system             latest    07d24c0ece79   4 hours ago      254MB
banking_system             latest    d93f92c42a56   5 hours ago      254MB
likh                       latest    2490a9918774   5 hours ago      380MB
likhitha                   latest    37a9b825fae2   5 hours ago      380MB
lk                         latest    0f470c19bf3f   5 hours ago      380MB
<none>                     <none>    83988e8d8c53   5 hours ago      380MB
welcome-to-docker          latest    c4981c2de489   2 days ago       380MB
docker/welcome-to-docker   latest    eedaff45e3c7   13 months ago    29.7MB
hello-world                latest    305243c73457   19 months ago    21kB
likhitharoyal@Likhithas-MBP project_cs567 % docker run -it my_ubuntu_custom:v1
Unable to find image 'my_ubuntu_custom:v1' locally
docker: Error response from daemon: pull access denied for my_ubuntu_custom, repository does not exist or may require 'docker login'.
See 'docker run --help'.
likhitharoyal@Likhithas-MBP project_cs567 % docker run -it jj:v1              
Unable to find image 'jj:v1' locally
docker: Error response from daemon: pull access denied for jj, repository does not exist or may require 'docker login'.
See 'docker run --help'.
likhitharoyal@Likhithas-MBP project_cs567 % docker run -it jj   

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (arm64v8)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/

likhitharoyal@Likhithas-MBP project_cs567 % docker run -it jj bash            
docker: Error response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: exec: "bash": executable file not found in $PATH: unknown.
likhitharoyal@Likhithas-MBP project_cs567 % docker run -it ubuntu

Unable to find image 'ubuntu:latest' locally
latest: Pulling from library/ubuntu
8bb55f067777: Download complete 
Digest: sha256:80dd3c3b9c6cecb9f1667e9290b3bc61b78c2678c02cbdae5f0fea92cc6734ab
Status: Downloaded newer image for ubuntu:latest
root@cbdae169f344:/# docker commit friendly_feynman emiya
bash: docker: command not found
root@cbdae169f344:/# cd desktop
bash: cd: desktop: No such file or directory
root@cbdae169f344:/# cd ..
root@cbdae169f344:/# cd .
root@cbdae169f344:/# docker stop                       
bash: docker: command not found
root@cbdae169f344:/# docker stop 
bash: docker: command not found
root@cbdae169f344:/# docker stop nostalgic_nightingale
bash: docker: command not found
root@cbdae169f344:/# time="2024-12-07T22:47:21-07:00" level=error msg="error waiting for container: unexpected EOF"
                                   %                                            likhitharoyal@Likhithas-MBP project_cs567 % 
